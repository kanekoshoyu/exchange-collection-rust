/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlgoAmendRequest {
    /// Algorithmic Order ID of the amended order.
    #[serde(rename = "algoId")]
    pub algo_id: String,
    /// Client Request ID for identifying the request.
    #[serde(rename = "reqId", skip_serializing_if = "Option::is_none")]
    pub req_id: Option<String>,
    /// Result code for the amendment request, where 0 indicates success.
    #[serde(rename = "sCode")]
    pub s_code: String,
    /// Additional message or reason for failure, if applicable.
    #[serde(rename = "sMsg", skip_serializing_if = "Option::is_none")]
    pub s_msg: Option<String>,
}

impl AlgoAmendRequest {
    pub fn new(algo_id: String, s_code: String) -> AlgoAmendRequest {
        AlgoAmendRequest {
            algo_id,
            req_id: None,
            s_code,
            s_msg: None,
        }
    }
}

