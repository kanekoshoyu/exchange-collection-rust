/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiKeyReset {
    /// The name of the sub-account
    #[serde(rename = "subAcct")]
    pub sub_acct: String,
    /// The API Key for the sub-account
    #[serde(rename = "apiKey")]
    pub api_key: String,
    /// Sub-account API Key label. If provided, the label will be reset. 
    #[serde(rename = "label", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub label: Option<Option<String>>,
    /// Sub-account API Key permissions: - `read_only`: Read - `trade`: Trade Separate with commas if more than one. The permissions will be reset if this is provided. 
    #[serde(rename = "perm", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub perm: Option<Option<String>>,
    /// Sub-account API Key linked IP addresses: - Separate with commas for multiple IPs (up to 20 supported). - If set to an empty string `\"\"`, no IP addresses will be linked to the API Key. 
    #[serde(rename = "ip", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ip: Option<Option<String>>,
}

impl ApiKeyReset {
    pub fn new(sub_acct: String, api_key: String) -> ApiKeyReset {
        ApiKeyReset {
            sub_acct,
            api_key,
            label: None,
            perm: None,
            ip: None,
        }
    }
}

