/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ManagedBills {
    /// Bill ID
    #[serde(rename = "billId")]
    pub bill_id: String,
    /// Transfer currency
    #[serde(rename = "ccy")]
    pub ccy: String,
    /// Transfer amount
    #[serde(rename = "amt")]
    pub amt: String,
    /// Bill type
    #[serde(rename = "type")]
    pub r#type: String,
    /// Sub-account name
    #[serde(rename = "subAcct")]
    pub sub_acct: String,
    /// Sub-account UID
    #[serde(rename = "subUid")]
    pub sub_uid: String,
    /// Bill ID creation time, Unix timestamp in millisecond format, e.g. 1597026383085
    #[serde(rename = "ts")]
    pub ts: String,
}

impl ManagedBills {
    pub fn new(bill_id: String, ccy: String, amt: String, r#type: String, sub_acct: String, sub_uid: String, ts: String) -> ManagedBills {
        ManagedBills {
            bill_id,
            ccy,
            amt,
            r#type,
            sub_acct,
            sub_uid,
            ts,
        }
    }
}

