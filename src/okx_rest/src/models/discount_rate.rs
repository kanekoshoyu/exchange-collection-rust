/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DiscountRate {
    /// Currency.
    #[serde(rename = "ccy", skip_serializing_if = "Option::is_none")]
    pub ccy: Option<String>,
    /// Interest-free quota.
    #[serde(rename = "amt", skip_serializing_if = "Option::is_none")]
    pub amt: Option<String>,
    /// Discount rate level. (Deprecated) 
    #[serde(rename = "discountLv", skip_serializing_if = "Option::is_none")]
    pub discount_lv: Option<String>,
    /// Minimum discount rate when it exceeds the maximum amount of the last tier. 
    #[serde(rename = "minDiscountRate", skip_serializing_if = "Option::is_none")]
    pub min_discount_rate: Option<String>,
    /// New discount details.
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<Vec<models::DiscountRateDetailsInner>>,
}

impl DiscountRate {
    pub fn new() -> DiscountRate {
        DiscountRate {
            ccy: None,
            amt: None,
            discount_lv: None,
            min_discount_rate: None,
            details: None,
        }
    }
}

