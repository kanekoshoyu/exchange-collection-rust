/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlaceOrderRequest {
    /// The instrument ID (e.g., BTC-USDT)
    #[serde(rename = "instId")]
    pub inst_id: String,
    /// Trade mode (e.g., cash)
    #[serde(rename = "tdMode")]
    pub td_mode: String,
    /// Client order ID
    #[serde(rename = "clOrdId", skip_serializing_if = "Option::is_none")]
    pub cl_ord_id: Option<String>,
    /// Order side (buy or sell)
    #[serde(rename = "side")]
    pub side: String,
    /// Order type (e.g., limit, market)
    #[serde(rename = "ordType")]
    pub ord_type: String,
    /// Order price
    #[serde(rename = "px", skip_serializing_if = "Option::is_none")]
    pub px: Option<String>,
    /// Order size
    #[serde(rename = "sz")]
    pub sz: String,
}

impl PlaceOrderRequest {
    pub fn new(inst_id: String, td_mode: String, side: String, ord_type: String, sz: String) -> PlaceOrderRequest {
        PlaceOrderRequest {
            inst_id,
            td_mode,
            cl_ord_id: None,
            side,
            ord_type,
            px: None,
            sz,
        }
    }
}

