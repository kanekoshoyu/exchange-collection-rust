/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexComponentsComponentsInner {
    /// Name of Exchange
    #[serde(rename = "exch", skip_serializing_if = "Option::is_none")]
    pub exch: Option<String>,
    /// Name of Exchange Trading Pairs
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// Price of Exchange Trading Pairs
    #[serde(rename = "symPx", skip_serializing_if = "Option::is_none")]
    pub sym_px: Option<String>,
    /// Weights
    #[serde(rename = "wgt", skip_serializing_if = "Option::is_none")]
    pub wgt: Option<String>,
    /// Price converted to index
    #[serde(rename = "cnvPx", skip_serializing_if = "Option::is_none")]
    pub cnv_px: Option<String>,
}

impl IndexComponentsComponentsInner {
    pub fn new() -> IndexComponentsComponentsInner {
        IndexComponentsComponentsInner {
            exch: None,
            symbol: None,
            sym_px: None,
            wgt: None,
            cnv_px: None,
        }
    }
}

