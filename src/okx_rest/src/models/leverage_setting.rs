/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LeverageSetting {
    /// Leverage value.
    #[serde(rename = "lever", skip_serializing_if = "Option::is_none")]
    pub lever: Option<String>,
    /// Position side.
    #[serde(rename = "posSide", skip_serializing_if = "Option::is_none")]
    pub pos_side: Option<PosSide>,
}

impl LeverageSetting {
    pub fn new() -> LeverageSetting {
        LeverageSetting {
            lever: None,
            pos_side: None,
        }
    }
}
/// Position side.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PosSide {
    #[serde(rename = "long")]
    Long,
    #[serde(rename = "short")]
    Short,
    #[serde(rename = "both")]
    Both,
}

impl Default for PosSide {
    fn default() -> PosSide {
        Self::Long
    }
}

