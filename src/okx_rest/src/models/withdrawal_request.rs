/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WithdrawalRequest {
    /// Currency, e.g., USDT. 
    #[serde(rename = "ccy")]
    pub ccy: String,
    /// Withdrawal amount. Withdrawal fee is not included in this amount. Ensure sufficient transaction fees are reserved.   For internal transfer, the transaction fee is always 0. 
    #[serde(rename = "amt")]
    pub amt: String,
    /// Withdrawal method:   - `3`: internal transfer   - `4`: on-chain withdrawal 
    #[serde(rename = "dest")]
    pub dest: Dest,
    /// The recipient address/account.   - If `dest` is `4`, some cryptocurrency addresses are formatted as `address:tag`, e.g., `ARDOR-7JF3-8F2E-QUWZ-CAN7F:123456`.   - If `dest` is `3`, `toAddr` should be a recipient address such as an email, phone number, or login account name (account name is only for sub-accounts). 
    #[serde(rename = "toAddr")]
    pub to_addr: String,
    /// Chain name.   - For currencies with multiple chains (e.g., USDT: USDT-ERC20, USDT-TRC20), specify the chain.   - If omitted, defaults to the main chain or the unique withdrawal chain for non-tradable assets. 
    #[serde(rename = "chain", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub chain: Option<Option<String>>,
    /// Area code for the phone number, e.g., `86`.   Required if `toAddr` is a phone number and `dest` is `3`. 
    #[serde(rename = "areaCode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub area_code: Option<Option<String>>,
    #[serde(rename = "rcvrInfo", skip_serializing_if = "Option::is_none")]
    pub rcvr_info: Option<Box<models::WithdrawalRequestRcvrInfo>>,
    /// Client-supplied ID. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters. 
    #[serde(rename = "clientId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<Option<String>>,
}

impl WithdrawalRequest {
    pub fn new(ccy: String, amt: String, dest: Dest, to_addr: String) -> WithdrawalRequest {
        WithdrawalRequest {
            ccy,
            amt,
            dest,
            to_addr,
            chain: None,
            area_code: None,
            rcvr_info: None,
            client_id: None,
        }
    }
}
/// Withdrawal method:   - `3`: internal transfer   - `4`: on-chain withdrawal 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Dest {
    #[serde(rename = "3")]
    Variant3,
    #[serde(rename = "4")]
    Variant4,
}

impl Default for Dest {
    fn default() -> Dest {
        Self::Variant3
    }
}

