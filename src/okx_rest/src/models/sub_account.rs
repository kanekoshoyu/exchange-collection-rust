/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubAccount {
    /// Sub-account type: - `1`: Standard sub-account - `2`: Managed trading sub-account - `5`: Custody trading sub-account - Copper - `9`: Managed trading sub-account - Copper - `12`: Custody trading sub-account - Komainu 
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// Sub-account status: - `true`: Normal - `false`: Frozen (global) 
    #[serde(rename = "enable", skip_serializing_if = "Option::is_none")]
    pub enable: Option<bool>,
    /// Sub-account name
    #[serde(rename = "subAcct", skip_serializing_if = "Option::is_none")]
    pub sub_acct: Option<String>,
    /// Sub-account UID
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
    /// Sub-account note
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// Mobile number linked with the sub-account
    #[serde(rename = "mobile", skip_serializing_if = "Option::is_none")]
    pub mobile: Option<String>,
    /// Google Authenticator login authentication: - `true`: On - `false`: Off 
    #[serde(rename = "gAuth", skip_serializing_if = "Option::is_none")]
    pub g_auth: Option<bool>,
    /// A list of frozen functions for the sub-account
    #[serde(rename = "frozenFunc", skip_serializing_if = "Option::is_none")]
    pub frozen_func: Option<Vec<FrozenFunc>>,
    /// Whether the sub-account has the right to transfer out: - `true`: Can transfer out - `false`: Cannot transfer out 
    #[serde(rename = "canTransOut", skip_serializing_if = "Option::is_none")]
    pub can_trans_out: Option<bool>,
    /// Sub-account creation time, Unix timestamp in milliseconds. Example: `1597026383085` 
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
}

impl SubAccount {
    pub fn new() -> SubAccount {
        SubAccount {
            r#type: None,
            enable: None,
            sub_acct: None,
            uid: None,
            label: None,
            mobile: None,
            g_auth: None,
            frozen_func: None,
            can_trans_out: None,
            ts: None,
        }
    }
}
/// A list of frozen functions for the sub-account
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FrozenFunc {
    #[serde(rename = "trading")]
    Trading,
    #[serde(rename = "convert")]
    Convert,
    #[serde(rename = "transfer")]
    Transfer,
    #[serde(rename = "withdrawal")]
    Withdrawal,
    #[serde(rename = "deposit")]
    Deposit,
    #[serde(rename = "flexible_loan")]
    FlexibleLoan,
}

impl Default for FrozenFunc {
    fn default() -> FrozenFunc {
        Self::Trading
    }
}

