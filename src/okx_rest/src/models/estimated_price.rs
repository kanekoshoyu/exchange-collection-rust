/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EstimatedPrice {
    /// Instrument type. Allowed values: - FUTURES - OPTION 
    #[serde(rename = "instType", skip_serializing_if = "Option::is_none")]
    pub inst_type: Option<String>,
    /// Instrument ID, e.g., BTC-USDT-SWAP. 
    #[serde(rename = "instId", skip_serializing_if = "Option::is_none")]
    pub inst_id: Option<String>,
    /// Estimated delivery price. 
    #[serde(rename = "settlePx", skip_serializing_if = "Option::is_none")]
    pub settle_px: Option<String>,
    /// Data return time in Unix timestamp format (milliseconds), e.g., 1597026383085. 
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
}

impl EstimatedPrice {
    pub fn new() -> EstimatedPrice {
        EstimatedPrice {
            inst_type: None,
            inst_id: None,
            settle_px: None,
            ts: None,
        }
    }
}

