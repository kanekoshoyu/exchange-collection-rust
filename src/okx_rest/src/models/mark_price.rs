/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarkPrice {
    /// Instrument type.
    #[serde(rename = "instType", skip_serializing_if = "Option::is_none")]
    pub inst_type: Option<InstType>,
    /// Instrument ID, e.g. BTC-USD-200214.
    #[serde(rename = "instId", skip_serializing_if = "Option::is_none")]
    pub inst_id: Option<String>,
    /// Mark price.
    #[serde(rename = "markPx", skip_serializing_if = "Option::is_none")]
    pub mark_px: Option<String>,
    /// Data return time, Unix timestamp format in milliseconds, e.g. 1597026383085.
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
}

impl MarkPrice {
    pub fn new() -> MarkPrice {
        MarkPrice {
            inst_type: None,
            inst_id: None,
            mark_px: None,
            ts: None,
        }
    }
}
/// Instrument type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InstType {
    #[serde(rename = "MARGIN")]
    Margin,
    #[serde(rename = "SWAP")]
    Swap,
    #[serde(rename = "FUTURES")]
    Futures,
    #[serde(rename = "OPTION")]
    Option,
}

impl Default for InstType {
    fn default() -> InstType {
        Self::Margin
    }
}

