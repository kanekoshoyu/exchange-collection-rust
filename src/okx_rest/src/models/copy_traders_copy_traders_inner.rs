/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CopyTradersCopyTradersInner {
    /// The time when copying began (Unix timestamp in milliseconds, e.g., 1597026383085)
    #[serde(rename = "beginCopyTime", skip_serializing_if = "Option::is_none")]
    pub begin_copy_time: Option<String>,
    /// The nick name of the copy trader
    #[serde(rename = "nickName", skip_serializing_if = "Option::is_none")]
    pub nick_name: Option<String>,
    /// The portrait link of the copy trader
    #[serde(rename = "portLink", skip_serializing_if = "Option::is_none")]
    pub port_link: Option<String>,
    /// The profit and loss from the copy trader's trades
    #[serde(rename = "pnl", skip_serializing_if = "Option::is_none")]
    pub pnl: Option<String>,
}

impl CopyTradersCopyTradersInner {
    pub fn new() -> CopyTradersCopyTradersInner {
        CopyTradersCopyTradersInner {
            begin_copy_time: None,
            nick_name: None,
            port_link: None,
            pnl: None,
        }
    }
}

