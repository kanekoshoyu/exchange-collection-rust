/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlgoOrds {
    /// Order ID of attached TP/SL order.
    #[serde(rename = "attachAlgoId", skip_serializing_if = "Option::is_none")]
    pub attach_algo_id: Option<String>,
    /// Client-supplied Algo ID when placing order attaching TP/SL. 
    #[serde(rename = "attachAlgoClOrdId", skip_serializing_if = "Option::is_none")]
    pub attach_algo_cl_ord_id: Option<String>,
    /// TP order kind
    #[serde(rename = "tpOrdKind", skip_serializing_if = "Option::is_none")]
    pub tp_ord_kind: Option<String>,
    /// Take-profit trigger price.
    #[serde(rename = "tpTriggerPx", skip_serializing_if = "Option::is_none")]
    pub tp_trigger_px: Option<String>,
    /// Take-profit trigger price type.   Options: last, index, mark. 
    #[serde(rename = "tpTriggerPxType", skip_serializing_if = "Option::is_none")]
    pub tp_trigger_px_type: Option<String>,
    /// Take-profit order price.
    #[serde(rename = "tpOrdPx", skip_serializing_if = "Option::is_none")]
    pub tp_ord_px: Option<String>,
    /// Stop-loss trigger price.
    #[serde(rename = "slTriggerPx", skip_serializing_if = "Option::is_none")]
    pub sl_trigger_px: Option<String>,
    /// Stop-loss trigger price type.   Options: last, index, mark. 
    #[serde(rename = "slTriggerPxType", skip_serializing_if = "Option::is_none")]
    pub sl_trigger_px_type: Option<String>,
    /// Stop-loss order price.
    #[serde(rename = "slOrdPx", skip_serializing_if = "Option::is_none")]
    pub sl_ord_px: Option<String>,
    /// Size of TP order
    #[serde(rename = "sz", skip_serializing_if = "Option::is_none")]
    pub sz: Option<String>,
    /// Whether to enable Cost-price SL for split TPs.   Options: 0 (disable, default), 1 (enable). 
    #[serde(rename = "amendPxOnTriggerType", skip_serializing_if = "Option::is_none")]
    pub amend_px_on_trigger_type: Option<String>,
    /// Error code for failed TP/SL order.
    #[serde(rename = "failCode", skip_serializing_if = "Option::is_none")]
    pub fail_code: Option<String>,
    /// Reason for failure to place TP/SL order.
    #[serde(rename = "failReason", skip_serializing_if = "Option::is_none")]
    pub fail_reason: Option<String>,
}

impl AlgoOrds {
    pub fn new() -> AlgoOrds {
        AlgoOrds {
            attach_algo_id: None,
            attach_algo_cl_ord_id: None,
            tp_ord_kind: None,
            tp_trigger_px: None,
            tp_trigger_px_type: None,
            tp_ord_px: None,
            sl_trigger_px: None,
            sl_trigger_px_type: None,
            sl_ord_px: None,
            sz: None,
            amend_px_on_trigger_type: None,
            fail_code: None,
            fail_reason: None,
        }
    }
}

