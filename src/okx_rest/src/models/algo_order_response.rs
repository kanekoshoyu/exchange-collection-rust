/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlgoOrderResponse {
    /// Algorithmic Order ID.
    #[serde(rename = "algoId")]
    pub algo_id: String,
    /// Client Order ID assigned by the client (Deprecated).
    #[serde(rename = "clOrdId", skip_serializing_if = "Option::is_none")]
    pub cl_ord_id: Option<String>,
    /// Client-supplied Algorithmic Order ID.
    #[serde(rename = "algoClOrdId", skip_serializing_if = "Option::is_none")]
    pub algo_cl_ord_id: Option<String>,
    /// The code of the event execution result. A value of 0 indicates success.
    #[serde(rename = "sCode")]
    pub s_code: String,
    /// Rejection message if the request is unsuccessful.
    #[serde(rename = "sMsg", skip_serializing_if = "Option::is_none")]
    pub s_msg: Option<String>,
    /// Order tag, a combination of case-sensitive alphanumerics, numbers, or letters (up to 16 characters).
    #[serde(rename = "tag")]
    pub tag: String,
}

impl AlgoOrderResponse {
    pub fn new(algo_id: String, s_code: String, tag: String) -> AlgoOrderResponse {
        AlgoOrderResponse {
            algo_id,
            cl_ord_id: None,
            algo_cl_ord_id: None,
            s_code,
            s_msg: None,
            tag,
        }
    }
}

