/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Leverages {
    /// Instrument ID.
    #[serde(rename = "instId")]
    pub inst_id: String,
    /// Margin mode.
    #[serde(rename = "mgnMode")]
    pub mgn_mode: MgnMode,
    /// List of leverage settings for the lead trader.
    #[serde(rename = "leadTraderLevers", skip_serializing_if = "Option::is_none")]
    pub lead_trader_levers: Option<Vec<models::LeverageSetting>>,
    /// List of leverage settings for the user.
    #[serde(rename = "myLevers", skip_serializing_if = "Option::is_none")]
    pub my_levers: Option<Vec<models::LeverageSetting>>,
}

impl Leverages {
    pub fn new(inst_id: String, mgn_mode: MgnMode) -> Leverages {
        Leverages {
            inst_id,
            mgn_mode,
            lead_trader_levers: None,
            my_levers: None,
        }
    }
}
/// Margin mode.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MgnMode {
    #[serde(rename = "isolated")]
    Isolated,
    #[serde(rename = "cross")]
    Cross,
}

impl Default for MgnMode {
    fn default() -> MgnMode {
        Self::Isolated
    }
}

