/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradingBotGridComputeMarginBalancePostRequest {
    /// Algo ID
    #[serde(rename = "algoId")]
    pub algo_id: String,
    /// Adjust margin balance type
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Adjust margin balance amount. Default is zero.
    #[serde(rename = "amt", skip_serializing_if = "Option::is_none")]
    pub amt: Option<String>,
}

impl TradingBotGridComputeMarginBalancePostRequest {
    pub fn new(algo_id: String, r#type: Type) -> TradingBotGridComputeMarginBalancePostRequest {
        TradingBotGridComputeMarginBalancePostRequest {
            algo_id,
            r#type,
            amt: None,
        }
    }
}
/// Adjust margin balance type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "add")]
    Add,
    #[serde(rename = "reduce")]
    Reduce,
}

impl Default for Type {
    fn default() -> Type {
        Self::Add
    }
}

