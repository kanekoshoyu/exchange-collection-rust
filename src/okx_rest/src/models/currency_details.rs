/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CurrencyDetails {
    /// Currency.
    #[serde(rename = "ccy", skip_serializing_if = "Option::is_none")]
    pub ccy: Option<String>,
    /// Equity of the currency.
    #[serde(rename = "eq", skip_serializing_if = "Option::is_none")]
    pub eq: Option<String>,
    /// Cash balance.
    #[serde(rename = "cashBal", skip_serializing_if = "Option::is_none")]
    pub cash_bal: Option<String>,
    /// Update time, Unix timestamp in milliseconds.
    #[serde(rename = "uTime", skip_serializing_if = "Option::is_none")]
    pub u_time: Option<String>,
    /// Isolated margin equity of the currency.
    #[serde(rename = "isoEq", skip_serializing_if = "Option::is_none")]
    pub iso_eq: Option<String>,
    /// Frozen balance for Dip Sniper and Peak Sniper.
    #[serde(rename = "fixedBal", skip_serializing_if = "Option::is_none")]
    pub fixed_bal: Option<String>,
    /// Available equity for trading on margin or futures.
    #[serde(rename = "availEq", skip_serializing_if = "Option::is_none")]
    pub avail_eq: Option<String>,
    /// Discounted equity of the currency in USD.
    #[serde(rename = "disEq", skip_serializing_if = "Option::is_none")]
    pub dis_eq: Option<String>,
    /// Available balance of the currency.
    #[serde(rename = "availBal", skip_serializing_if = "Option::is_none")]
    pub avail_bal: Option<String>,
    /// Frozen balance of the currency.
    #[serde(rename = "frozenBal", skip_serializing_if = "Option::is_none")]
    pub frozen_bal: Option<String>,
    /// Margin frozen for open orders.
    #[serde(rename = "ordFrozen", skip_serializing_if = "Option::is_none")]
    pub ord_frozen: Option<String>,
    /// Liabilities of the currency.
    #[serde(rename = "liab", skip_serializing_if = "Option::is_none")]
    pub liab: Option<String>,
    /// Unrealized profit and loss of the currency.
    #[serde(rename = "upl", skip_serializing_if = "Option::is_none")]
    pub upl: Option<String>,
    /// Liabilities due to unrealized loss of the currency.
    #[serde(rename = "uplLiab", skip_serializing_if = "Option::is_none")]
    pub upl_liab: Option<String>,
    /// Cross liabilities of the currency.
    #[serde(rename = "crossLiab", skip_serializing_if = "Option::is_none")]
    pub cross_liab: Option<String>,
    /// Isolated liabilities of the currency.
    #[serde(rename = "isoLiab", skip_serializing_if = "Option::is_none")]
    pub iso_liab: Option<String>,
    /// Cross margin ratio of the currency.
    #[serde(rename = "mgnRatio", skip_serializing_if = "Option::is_none")]
    pub mgn_ratio: Option<String>,
    /// Initial margin requirement at the currency level.
    #[serde(rename = "imr", skip_serializing_if = "Option::is_none")]
    pub imr: Option<String>,
    /// Maintenance margin requirement at the currency level.
    #[serde(rename = "mmr", skip_serializing_if = "Option::is_none")]
    pub mmr: Option<String>,
    /// Interest of the currency.
    #[serde(rename = "interest", skip_serializing_if = "Option::is_none")]
    pub interest: Option<String>,
    /// System's forced repayment (TWAP) indicator.
    #[serde(rename = "twap", skip_serializing_if = "Option::is_none")]
    pub twap: Option<String>,
    /// Maximum loan amount of the currency.
    #[serde(rename = "maxLoan", skip_serializing_if = "Option::is_none")]
    pub max_loan: Option<String>,
    /// Equity in USD of the currency.
    #[serde(rename = "eqUsd", skip_serializing_if = "Option::is_none")]
    pub eq_usd: Option<String>,
    /// Potential borrowing IMR of the currency in USD.
    #[serde(rename = "borrowFroz", skip_serializing_if = "Option::is_none")]
    pub borrow_froz: Option<String>,
    /// Leverage of the currency.
    #[serde(rename = "notionalLever", skip_serializing_if = "Option::is_none")]
    pub notional_lever: Option<String>,
    /// SPOT isolated balance, applicable to copy trading.
    #[serde(rename = "spotIsoBal", skip_serializing_if = "Option::is_none")]
    pub spot_iso_bal: Option<String>,
    /// Smart sync equity, applicable to copy trading.
    #[serde(rename = "smtSyncEq", skip_serializing_if = "Option::is_none")]
    pub smt_sync_eq: Option<String>,
    /// Spot smart sync equity, applicable to copy trading.
    #[serde(rename = "spotCopyTradingEq", skip_serializing_if = "Option::is_none")]
    pub spot_copy_trading_eq: Option<String>,
    /// Spot balance in the unit of the currency.
    #[serde(rename = "spotBal", skip_serializing_if = "Option::is_none")]
    pub spot_bal: Option<String>,
    /// Spot average cost price in USD.
    #[serde(rename = "openAvgPx", skip_serializing_if = "Option::is_none")]
    pub open_avg_px: Option<Vec<String>>,
    /// Spot accumulated cost price in USD.
    #[serde(rename = "accAvgPx", skip_serializing_if = "Option::is_none")]
    pub acc_avg_px: Option<Vec<String>>,
    /// Spot unrealized profit and loss in USD.
    #[serde(rename = "spotUpl", skip_serializing_if = "Option::is_none")]
    pub spot_upl: Option<String>,
    /// Spot unrealized profit and loss ratio.
    #[serde(rename = "spotUplRatio", skip_serializing_if = "Option::is_none")]
    pub spot_upl_ratio: Option<String>,
    /// Spot accumulated profit and loss in USD.
    #[serde(rename = "totalPnl", skip_serializing_if = "Option::is_none")]
    pub total_pnl: Option<String>,
    /// Spot accumulated profit and loss ratio
    #[serde(rename = "totalPnlRatio", skip_serializing_if = "Option::is_none")]
    pub total_pnl_ratio: Option<String>,
}

impl CurrencyDetails {
    pub fn new() -> CurrencyDetails {
        CurrencyDetails {
            ccy: None,
            eq: None,
            cash_bal: None,
            u_time: None,
            iso_eq: None,
            fixed_bal: None,
            avail_eq: None,
            dis_eq: None,
            avail_bal: None,
            frozen_bal: None,
            ord_frozen: None,
            liab: None,
            upl: None,
            upl_liab: None,
            cross_liab: None,
            iso_liab: None,
            mgn_ratio: None,
            imr: None,
            mmr: None,
            interest: None,
            twap: None,
            max_loan: None,
            eq_usd: None,
            borrow_froz: None,
            notional_lever: None,
            spot_iso_bal: None,
            smt_sync_eq: None,
            spot_copy_trading_eq: None,
            spot_bal: None,
            open_avg_px: None,
            acc_avg_px: None,
            spot_upl: None,
            spot_upl_ratio: None,
            total_pnl: None,
            total_pnl_ratio: None,
        }
    }
}

