/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfitLeadResponse {
    /// The currency of profit sharing.
    #[serde(rename = "ccy", skip_serializing_if = "Option::is_none")]
    pub ccy: Option<String>,
    /// Profit sharing amount. It will be 0 if there is no profit sharing.
    #[serde(rename = "profitSharingAmt", skip_serializing_if = "Option::is_none")]
    pub profit_sharing_amt: Option<String>,
    /// Profit sharing amount. It will be 0 if there is no profit sharing.
    #[serde(rename = "unrealizedprofitSharingAmt", skip_serializing_if = "Option::is_none")]
    pub unrealizedprofit_sharing_amt: Option<String>,
    /// Profit sharing amount. It will be 0 if there is no profit sharing
    #[serde(rename = "totalunrealizedprofitSharingAmt", skip_serializing_if = "Option::is_none")]
    pub totalunrealizedprofit_sharing_amt: Option<String>,
    /// Profit sharing amount. It will be 0 if there is no profit sharing.
    #[serde(rename = "totalprofitSharingAmt", skip_serializing_if = "Option::is_none")]
    pub totalprofit_sharing_amt: Option<String>,
    /// Nickname of the copy trader.
    #[serde(rename = "nickName", skip_serializing_if = "Option::is_none")]
    pub nick_name: Option<String>,
    /// Profit sharing ID.
    #[serde(rename = "profitSharingId", skip_serializing_if = "Option::is_none")]
    pub profit_sharing_id: Option<String>,
    /// Instrument type.
    #[serde(rename = "instType", skip_serializing_if = "Option::is_none")]
    pub inst_type: Option<String>,
    /// Portrait link.
    #[serde(rename = "portLink", skip_serializing_if = "Option::is_none")]
    pub port_link: Option<String>,
    /// Profit sharing time.
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
}

impl ProfitLeadResponse {
    pub fn new() -> ProfitLeadResponse {
        ProfitLeadResponse {
            ccy: None,
            profit_sharing_amt: None,
            unrealizedprofit_sharing_amt: None,
            totalunrealizedprofit_sharing_amt: None,
            totalprofit_sharing_amt: None,
            nick_name: None,
            profit_sharing_id: None,
            inst_type: None,
            port_link: None,
            ts: None,
        }
    }
}

