/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexTickers {
    /// Index
    #[serde(rename = "instId", skip_serializing_if = "Option::is_none")]
    pub inst_id: Option<String>,
    /// Latest index price
    #[serde(rename = "idxPx", skip_serializing_if = "Option::is_none")]
    pub idx_px: Option<String>,
    /// Highest price in the past 24 hours
    #[serde(rename = "high24h", skip_serializing_if = "Option::is_none")]
    pub high24h: Option<String>,
    /// Lowest price in the past 24 hours
    #[serde(rename = "low24h", skip_serializing_if = "Option::is_none")]
    pub low24h: Option<String>,
    /// Open price in the past 24 hours
    #[serde(rename = "open24h", skip_serializing_if = "Option::is_none")]
    pub open24h: Option<String>,
    /// Open price in UTC 0
    #[serde(rename = "sodUtc0", skip_serializing_if = "Option::is_none")]
    pub sod_utc0: Option<String>,
    /// Open price in UTC 8
    #[serde(rename = "sodUtc8", skip_serializing_if = "Option::is_none")]
    pub sod_utc8: Option<String>,
    /// Index price update time, Unix timestamp format in milliseconds, e.g. 1597026383085
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
}

impl IndexTickers {
    pub fn new() -> IndexTickers {
        IndexTickers {
            inst_id: None,
            idx_px: None,
            high24h: None,
            low24h: None,
            open24h: None,
            sod_utc0: None,
            sod_utc8: None,
            ts: None,
        }
    }
}

