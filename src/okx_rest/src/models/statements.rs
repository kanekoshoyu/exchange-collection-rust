/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Statements {
    /// The URL or path to the download file.
    #[serde(rename = "fileHref", skip_serializing_if = "Option::is_none")]
    pub file_href: Option<String>,
    /// The timestamp when the download link was generated. Format is Unix timestamp in milliseconds.
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<i32>,
    /// The current status of the download link. Possible values are 'finished' or 'ongoing'.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<State>,
}

impl Statements {
    pub fn new() -> Statements {
        Statements {
            file_href: None,
            ts: None,
            state: None,
        }
    }
}
/// The current status of the download link. Possible values are 'finished' or 'ongoing'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "finished")]
    Finished,
    #[serde(rename = "ongoing")]
    Ongoing,
}

impl Default for State {
    fn default() -> State {
        Self::Finished
    }
}

