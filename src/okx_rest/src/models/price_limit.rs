/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PriceLimit {
    /// Instrument type.
    #[serde(rename = "instType", skip_serializing_if = "Option::is_none")]
    pub inst_type: Option<String>,
    /// Instrument ID, e.g., BTC-USDT-SWAP.
    #[serde(rename = "instId", skip_serializing_if = "Option::is_none")]
    pub inst_id: Option<String>,
    /// Highest buy limit. Returns an empty string (\"\") when `enabled` is false.
    #[serde(rename = "buyLmt", skip_serializing_if = "Option::is_none")]
    pub buy_lmt: Option<String>,
    /// Lowest sell limit. Returns an empty string (\"\") when `enabled` is false.
    #[serde(rename = "sellLmt", skip_serializing_if = "Option::is_none")]
    pub sell_lmt: Option<String>,
    /// Data return time, Unix timestamp format in milliseconds, e.g., 1597026383085.
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
    /// Whether the price limit is effective. `true` means the price limit is effective, `false` means it is not effective.
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
}

impl PriceLimit {
    pub fn new() -> PriceLimit {
        PriceLimit {
            inst_type: None,
            inst_id: None,
            buy_lmt: None,
            sell_lmt: None,
            ts: None,
            enabled: None,
        }
    }
}

