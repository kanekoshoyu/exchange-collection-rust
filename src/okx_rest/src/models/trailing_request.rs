/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TrailingRequest {
    /// Callback price ratio (e.g., 0.01 represents 1%). Either callbackRatio or callbackSpread must be provided.
    #[serde(rename = "callbackRatio")]
    pub callback_ratio: String,
    /// Callback price variance. Either callbackRatio or callbackSpread must be provided.
    #[serde(rename = "callbackSpread")]
    pub callback_spread: String,
    /// Active price. The system will start tracking the market and calculating your trigger price after the activation price is reached. If not set, the order will be activated as soon as itâ€™s placed.
    #[serde(rename = "activePx")]
    pub active_px: String,
    /// Quick Margin type. Only applicable to Quick Margin Mode of isolated margin.
    #[serde(rename = "quickMgnType")]
    pub quick_mgn_type: QuickMgnType,
    /// Whether the order can only reduce the position size. Valid options are true or false. Default is false. This parameter is only valid in the FUTURES/SWAP net mode.
    #[serde(rename = "reduceOnly", skip_serializing_if = "Option::is_none")]
    pub reduce_only: Option<bool>,
}

impl TrailingRequest {
    pub fn new(callback_ratio: String, callback_spread: String, active_px: String, quick_mgn_type: QuickMgnType) -> TrailingRequest {
        TrailingRequest {
            callback_ratio,
            callback_spread,
            active_px,
            quick_mgn_type,
            reduce_only: None,
        }
    }
}
/// Quick Margin type. Only applicable to Quick Margin Mode of isolated margin.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum QuickMgnType {
    #[serde(rename = "manual")]
    Manual,
    #[serde(rename = "auto_borrow")]
    AutoBorrow,
    #[serde(rename = "auto_repay")]
    AutoRepay,
}

impl Default for QuickMgnType {
    fn default() -> QuickMgnType {
        Self::Manual
    }
}

