/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicStats {
    /// Win ratio (e.g., 0.1 represents 10%)
    #[serde(rename = "winRatio")]
    pub win_ratio: String,
    /// Number of profit days
    #[serde(rename = "profitDays")]
    pub profit_days: String,
    /// Number of loss days
    #[serde(rename = "lossDays")]
    pub loss_days: String,
    /// Current copy trader PnL in USDT
    #[serde(rename = "curCopyTraderPnl")]
    pub cur_copy_trader_pnl: String,
    /// Average lead position notional in USDT
    #[serde(rename = "avgSubPosNotional")]
    pub avg_sub_pos_notional: String,
    /// Investment amount in USDT
    #[serde(rename = "investAmt")]
    pub invest_amt: String,
    /// Margin currency
    #[serde(rename = "ccy")]
    pub ccy: String,
}

impl PublicStats {
    pub fn new(win_ratio: String, profit_days: String, loss_days: String, cur_copy_trader_pnl: String, avg_sub_pos_notional: String, invest_amt: String, ccy: String) -> PublicStats {
        PublicStats {
            win_ratio,
            profit_days,
            loss_days,
            cur_copy_trader_pnl,
            avg_sub_pos_notional,
            invest_amt,
            ccy,
        }
    }
}

