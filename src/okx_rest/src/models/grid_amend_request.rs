/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GridAmendRequest {
    /// Algo ID.
    #[serde(rename = "algoId")]
    pub algo_id: String,
    /// Instrument ID, e.g., BTC-USDT-SWAP.
    #[serde(rename = "instId")]
    pub inst_id: String,
    /// New stop-loss trigger price. If set to an empty string (`\"\"`), it cancels the stop-loss trigger price. Either `slTriggerPx` or `tpTriggerPx` is required. 
    #[serde(rename = "slTriggerPx", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sl_trigger_px: Option<Option<String>>,
    /// New take-profit trigger price. If set to an empty string (`\"\"`), it cancels the take-profit trigger price. Either `tpTriggerPx` or `slTriggerPx` is required. 
    #[serde(rename = "tpTriggerPx", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tp_trigger_px: Option<Option<String>>,
    /// Take profit ratio. `0.1` represents 10%. Only applicable to contract grids. If set to an empty string (`\"\"`), it cancels the take-profit ratio. 
    #[serde(rename = "tpRatio", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tp_ratio: Option<Option<String>>,
    /// Stop loss ratio. `0.1` represents 10%. Only applicable to contract grids. If set to an empty string (`\"\"`), it cancels the stop-loss ratio. 
    #[serde(rename = "slRatio", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sl_ratio: Option<Option<String>>,
    /// Trigger parameters. Each object defines actions, strategies, and optional details.
    #[serde(rename = "triggerParams", skip_serializing_if = "Option::is_none")]
    pub trigger_params: Option<Vec<models::GridAmendRequestTriggerParamsInner>>,
}

impl GridAmendRequest {
    pub fn new(algo_id: String, inst_id: String) -> GridAmendRequest {
        GridAmendRequest {
            algo_id,
            inst_id,
            sl_trigger_px: None,
            tp_trigger_px: None,
            tp_ratio: None,
            sl_ratio: None,
            trigger_params: None,
        }
    }
}

