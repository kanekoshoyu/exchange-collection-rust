/*
 * OKX API
 *
 * Welcome to OKX Developer document!   excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection): - Trading Account (this might become needed, will add when we need it) - Block Trading - Financial Producer - Affiliate - Status - Announcement 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LeveragesRequest {
    /// Margin mode.
    #[serde(rename = "mgnMode")]
    pub mgn_mode: MgnMode,
    /// Leverage value.
    #[serde(rename = "lever")]
    pub lever: String,
    /// Instrument ID. If there are multiple instruments, separate them with commas.
    #[serde(rename = "instId")]
    pub inst_id: String,
}

impl LeveragesRequest {
    pub fn new(mgn_mode: MgnMode, lever: String, inst_id: String) -> LeveragesRequest {
        LeveragesRequest {
            mgn_mode,
            lever,
            inst_id,
        }
    }
}
/// Margin mode.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MgnMode {
    #[serde(rename = "cross")]
    Cross,
    #[serde(rename = "isolated")]
    Isolated,
}

impl Default for MgnMode {
    fn default() -> MgnMode {
        Self::Cross
    }
}

