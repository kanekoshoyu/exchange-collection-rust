/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransferFlow {
    /// Record ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// From Account ID
    #[serde(rename = "fromAccountId", skip_serializing_if = "Option::is_none")]
    pub from_account_id: Option<String>,
    /// To Account ID
    #[serde(rename = "toAccountId", skip_serializing_if = "Option::is_none")]
    pub to_account_id: Option<String>,
    /// Transaction type, which is 'transfer' in this context
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    /// Transfer Amount. Default Value = 0
    #[serde(rename = "netTransferAmount", skip_serializing_if = "Option::is_none")]
    pub net_transfer_amount: Option<String>,
    /// Currency (e.g., ETH, BTC, USDC, etc.)
    #[serde(rename = "transferCcy", skip_serializing_if = "Option::is_none")]
    pub transfer_ccy: Option<String>,
    /// Balance of the From Account. Default Value = 0
    #[serde(rename = "fromAccountBalance", skip_serializing_if = "Option::is_none")]
    pub from_account_balance: Option<String>,
    /// Balance of the To Account. Default Value = 0
    #[serde(rename = "toAccountBalance", skip_serializing_if = "Option::is_none")]
    pub to_account_balance: Option<String>,
    /// Transfer Order ID
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<String>,
    /// Remark
    #[serde(rename = "remark", skip_serializing_if = "Option::is_none")]
    pub remark: Option<String>,
    /// Transfer Completed Time (in milliseconds since epoch)
    #[serde(rename = "transactTime", skip_serializing_if = "Option::is_none")]
    pub transact_time: Option<String>,
}

impl TransferFlow {
    pub fn new() -> TransferFlow {
        TransferFlow {
            id: None,
            from_account_id: None,
            to_account_id: None,
            r#type: None,
            net_transfer_amount: None,
            transfer_ccy: None,
            from_account_balance: None,
            to_account_balance: None,
            order_id: None,
            remark: None,
            transact_time: None,
        }
    }
}
/// Transaction type, which is 'transfer' in this context
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "transfer")]
    Transfer,
}

impl Default for Type {
    fn default() -> Type {
        Self::Transfer
    }
}

