/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Trade {
    /// Timestamp of the trade
    #[serde(rename = "t", skip_serializing_if = "Option::is_none")]
    pub t: Option<i64>,
    /// Traded price
    #[serde(rename = "p", skip_serializing_if = "Option::is_none")]
    pub p: Option<String>,
    /// Volume of the trade
    #[serde(rename = "q", skip_serializing_if = "Option::is_none")]
    pub q: Option<String>,
    /// Whether it is a buyer's maker order
    #[serde(rename = "ibm", skip_serializing_if = "Option::is_none")]
    pub ibm: Option<bool>,
}

impl Trade {
    pub fn new() -> Trade {
        Trade {
            t: None,
            p: None,
            q: None,
            ibm: None,
        }
    }
}

