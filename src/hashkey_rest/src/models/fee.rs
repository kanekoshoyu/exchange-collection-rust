/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Fee {
    /// Currency for fees
    #[serde(rename = "feeCoin", skip_serializing_if = "Option::is_none")]
    pub fee_coin: Option<String>,
    /// Currency ID for fees
    #[serde(rename = "feeCoinId", skip_serializing_if = "Option::is_none")]
    pub fee_coin_id: Option<String>,
    /// Fee currency name
    #[serde(rename = "feeCoinName", skip_serializing_if = "Option::is_none")]
    pub fee_coin_name: Option<String>,
    /// Transaction fee amount
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<String>,
    /// Amount of transaction fee
    #[serde(rename = "feeAmount", skip_serializing_if = "Option::is_none")]
    pub fee_amount: Option<String>,
}

impl Fee {
    pub fn new() -> Fee {
        Fee {
            fee_coin: None,
            fee_coin_id: None,
            fee_coin_name: None,
            fee: None,
            fee_amount: None,
        }
    }
}

