/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradingResponse {
    /// Status code
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<i32>,
    /// Error message (if any)
    #[serde(rename = "msg", skip_serializing_if = "Option::is_none")]
    pub msg: Option<String>,
    /// VIP Level
    #[serde(rename = "vipLevel", skip_serializing_if = "Option::is_none")]
    pub vip_level: Option<String>,
    /// Total trading volume in the last 30 days (USD)
    #[serde(rename = "tradeVol30Day", skip_serializing_if = "Option::is_none")]
    pub trade_vol30_day: Option<String>,
    /// Total asset balance (USD)
    #[serde(rename = "totalAssetBal", skip_serializing_if = "Option::is_none")]
    pub total_asset_bal: Option<String>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<models::ProductData>>,
}

impl TradingResponse {
    pub fn new() -> TradingResponse {
        TradingResponse {
            code: None,
            msg: None,
            vip_level: None,
            trade_vol30_day: None,
            total_asset_bal: None,
            data: None,
        }
    }
}

