/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Ticker {
    /// Millisecond timestamp
    #[serde(rename = "t", skip_serializing_if = "Option::is_none")]
    pub t: Option<i64>,
    /// Symbol (e.g., BTCUSD)
    #[serde(rename = "s", skip_serializing_if = "Option::is_none")]
    pub s: Option<String>,
    /// Latest traded price
    #[serde(rename = "c", skip_serializing_if = "Option::is_none")]
    pub c: Option<String>,
    /// Highest price
    #[serde(rename = "h", skip_serializing_if = "Option::is_none")]
    pub h: Option<String>,
    /// Lowest price
    #[serde(rename = "l", skip_serializing_if = "Option::is_none")]
    pub l: Option<String>,
    /// Opening price
    #[serde(rename = "o", skip_serializing_if = "Option::is_none")]
    pub o: Option<String>,
    /// Highest bid price
    #[serde(rename = "b", skip_serializing_if = "Option::is_none")]
    pub b: Option<String>,
    /// Highest selling price
    #[serde(rename = "a", skip_serializing_if = "Option::is_none")]
    pub a: Option<String>,
    /// Total trade volume (in base asset)
    #[serde(rename = "v", skip_serializing_if = "Option::is_none")]
    pub v: Option<String>,
    /// Total trade volume (in quote asset)
    #[serde(rename = "qv", skip_serializing_if = "Option::is_none")]
    pub qv: Option<String>,
}

impl Ticker {
    pub fn new() -> Ticker {
        Ticker {
            t: None,
            s: None,
            c: None,
            h: None,
            l: None,
            o: None,
            b: None,
            a: None,
            v: None,
            qv: None,
        }
    }
}

