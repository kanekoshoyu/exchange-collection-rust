/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WithdrawResponse {
    /// Record ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Account ID
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    /// Transaction type (Deposit or Withdraw)
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    /// Deposit/Withdraw amount. Default Value = 0
    #[serde(rename = "netVaAmount", skip_serializing_if = "Option::is_none")]
    pub net_va_amount: Option<String>,
    /// Currency (e.g., ETH, BTC, USDC, etc.)
    #[serde(rename = "vaCcy", skip_serializing_if = "Option::is_none")]
    pub va_ccy: Option<String>,
    /// Balance in the account. Default Value = 0
    #[serde(rename = "vaBalance", skip_serializing_if = "Option::is_none")]
    pub va_balance: Option<String>,
    /// Deposit/Withdraw Fee. Default Value = 0
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<String>,
    /// Fee Currency
    #[serde(rename = "feeCcy", skip_serializing_if = "Option::is_none")]
    pub fee_ccy: Option<String>,
    /// Deposit/Withdraw Order ID
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<String>,
    /// Chain Transaction ID
    #[serde(rename = "txnId", skip_serializing_if = "Option::is_none")]
    pub txn_id: Option<String>,
    /// Remark
    #[serde(rename = "remark", skip_serializing_if = "Option::is_none")]
    pub remark: Option<String>,
    /// Deposit/Withdraw Completed Time (in milliseconds since epoch)
    #[serde(rename = "transactTime", skip_serializing_if = "Option::is_none")]
    pub transact_time: Option<String>,
}

impl WithdrawResponse {
    pub fn new() -> WithdrawResponse {
        WithdrawResponse {
            id: None,
            account_id: None,
            r#type: None,
            net_va_amount: None,
            va_ccy: None,
            va_balance: None,
            fee: None,
            fee_ccy: None,
            order_id: None,
            txn_id: None,
            remark: None,
            transact_time: None,
        }
    }
}
/// Transaction type (Deposit or Withdraw)
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Deposit")]
    Deposit,
    #[serde(rename = "Withdraw")]
    Withdraw,
}

impl Default for Type {
    fn default() -> Type {
        Self::Deposit
    }
}

