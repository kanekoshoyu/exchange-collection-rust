/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradeResponse {
    /// Currency pair symbol
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// Currency pair symbol name
    #[serde(rename = "symbolName", skip_serializing_if = "Option::is_none")]
    pub symbol_name: Option<String>,
    /// Topic to subscribe to (e.g., trade)
    #[serde(rename = "topic", skip_serializing_if = "Option::is_none")]
    pub topic: Option<String>,
    #[serde(rename = "params", skip_serializing_if = "Option::is_none")]
    pub params: Option<Box<models::RealtimeRequestParams>>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<models::TradeResponseDataInner>>,
    /// Is it the first return
    #[serde(rename = "f", skip_serializing_if = "Option::is_none")]
    pub f: Option<bool>,
    /// Send time
    #[serde(rename = "sendTime", skip_serializing_if = "Option::is_none")]
    pub send_time: Option<i64>,
    /// Shared flag
    #[serde(rename = "shared", skip_serializing_if = "Option::is_none")]
    pub shared: Option<bool>,
    /// Unique identifier
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
}

impl TradeResponse {
    pub fn new() -> TradeResponse {
        TradeResponse {
            symbol: None,
            symbol_name: None,
            topic: None,
            params: None,
            data: None,
            f: None,
            send_time: None,
            shared: None,
            id: None,
        }
    }
}

