/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountUpdateResponse {
    /// Event type
    #[serde(rename = "e", skip_serializing_if = "Option::is_none")]
    pub e: Option<String>,
    /// Event time
    #[serde(rename = "E", skip_serializing_if = "Option::is_none")]
    pub e: Option<i64>,
    /// Can trade
    #[serde(rename = "T", skip_serializing_if = "Option::is_none")]
    pub t: Option<bool>,
    /// Can withdraw
    #[serde(rename = "W", skip_serializing_if = "Option::is_none")]
    pub w: Option<bool>,
    /// Can deposit
    #[serde(rename = "D", skip_serializing_if = "Option::is_none")]
    pub d: Option<bool>,
    #[serde(rename = "B", skip_serializing_if = "Option::is_none")]
    pub b: Option<Vec<models::AccountUpdateResponseBInner>>,
}

impl AccountUpdateResponse {
    pub fn new() -> AccountUpdateResponse {
        AccountUpdateResponse {
            e: None,
            e: None,
            t: None,
            w: None,
            d: None,
            b: None,
        }
    }
}

