/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Subaccount {
    /// Account Number   *(Unique identifier for the account)* 
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<i32>,
    /// Account Label   *(e.g., \"Main Trading Account\", \"Sub Trading Account\", \"Fiat Account\", \"Custody Account\", \"OPT Account\")* 
    #[serde(rename = "accountLabel", skip_serializing_if = "Option::is_none")]
    pub account_label: Option<String>,
    /// Account Type   *(1: Trading Account, 5: Custody Account, 6: Fiat Account, 7: OPT Account)* 
    #[serde(rename = "accountType", skip_serializing_if = "Option::is_none")]
    pub account_type: Option<i32>,
    /// Not in use   *(This field is not currently in use)* 
    #[serde(rename = "accountIndex", skip_serializing_if = "Option::is_none")]
    pub account_index: Option<i32>,
}

impl Subaccount {
    pub fn new() -> Subaccount {
        Subaccount {
            account_id: None,
            account_label: None,
            account_type: None,
            account_index: None,
        }
    }
}

