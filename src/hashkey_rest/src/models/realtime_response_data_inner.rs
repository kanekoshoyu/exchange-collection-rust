/*
 * Hashkey Exchange
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RealtimeResponseDataInner {
    /// Event Time
    #[serde(rename = "t", skip_serializing_if = "Option::is_none")]
    pub t: Option<i64>,
    /// Symbol
    #[serde(rename = "s", skip_serializing_if = "Option::is_none")]
    pub s: Option<String>,
    /// Symbol Name
    #[serde(rename = "sn", skip_serializing_if = "Option::is_none")]
    pub sn: Option<String>,
    /// Close Price
    #[serde(rename = "c", skip_serializing_if = "Option::is_none")]
    pub c: Option<String>,
    /// High Price
    #[serde(rename = "h", skip_serializing_if = "Option::is_none")]
    pub h: Option<String>,
    /// Low Price
    #[serde(rename = "l", skip_serializing_if = "Option::is_none")]
    pub l: Option<String>,
    /// Open Price
    #[serde(rename = "o", skip_serializing_if = "Option::is_none")]
    pub o: Option<String>,
    /// Total traded base asset volume
    #[serde(rename = "v", skip_serializing_if = "Option::is_none")]
    pub v: Option<String>,
    /// Total traded quote asset volume
    #[serde(rename = "qv", skip_serializing_if = "Option::is_none")]
    pub qv: Option<String>,
    /// 24H Range
    #[serde(rename = "m", skip_serializing_if = "Option::is_none")]
    pub m: Option<String>,
    /// Trade Id
    #[serde(rename = "e", skip_serializing_if = "Option::is_none")]
    pub e: Option<i32>,
}

impl RealtimeResponseDataInner {
    pub fn new() -> RealtimeResponseDataInner {
        RealtimeResponseDataInner {
            t: None,
            s: None,
            sn: None,
            c: None,
            h: None,
            l: None,
            o: None,
            v: None,
            qv: None,
            m: None,
            e: None,
        }
    }
}

