/*
 * Bitwyre REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum RequestSchemaPayload {
    SpotAccountRequest(Box<models::SpotAccountRequest>),
    OrderRequest(Box<models::OrderRequest>),
    Leverage(Box<models::Leverage>),
    ConversionRequest(Box<models::ConversionRequest>),
    VaultRequest(Box<models::VaultRequest>),
    CallbackRequest(Box<models::CallbackRequest>),
    AssetRequest(Box<models::AssetRequest>),
    DepositCryptoRequest(Box<models::DepositCryptoRequest>),
    FiatRequest(Box<models::FiatRequest>),
    CryptoPutRequest(Box<models::CryptoPutRequest>),
    BankDetailRequest(Box<models::BankDetailRequest>),
    KycRequest(Box<models::KycRequest>),
    KycFiles(Box<models::KycFiles>),
    KycProof(Box<models::KycProof>),
    TicketRequest(Box<models::TicketRequest>),
    ChatMessage(String),
    EscrowRequest(Box<models::EscrowRequest>),
    ForumRequest(Box<models::ForumRequest>),
}

impl Default for RequestSchemaPayload {
    fn default() -> Self {
        Self::SpotAccountRequest(Default::default())
    }
}
/// Side of order (buy or sell)
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Side {
    #[serde(rename = "1")]
    Variant1,
    #[serde(rename = "2")]
    Variant2,
}

impl Default for Side {
    fn default() -> Side {
        Self::Variant1
    }
}
/// Order type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Ordtype {
    #[serde(rename = "1")]
    Variant1,
    #[serde(rename = "2")]
    Variant2,
    #[serde(rename = "3")]
    Variant3,
    #[serde(rename = "4")]
    Variant4,
    #[serde(rename = "19")]
    Variant19,
    #[serde(rename = "20")]
    Variant20,
    #[serde(rename = "21")]
    Variant21,
    #[serde(rename = "22")]
    Variant22,
}

impl Default for Ordtype {
    fn default() -> Ordtype {
        Self::Variant1
    }
}

