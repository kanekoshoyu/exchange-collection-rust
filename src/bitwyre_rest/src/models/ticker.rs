/*
 * Bitwyre REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Ticker {
    /// The name of the trading instrument (base and quote asset with product type).
    #[serde(rename = "instrument", skip_serializing_if = "Option::is_none")]
    pub instrument: Option<String>,
    /// The base asset code for the instrument.
    #[serde(rename = "asset_base", skip_serializing_if = "Option::is_none")]
    pub asset_base: Option<String>,
    /// The quote asset code for the instrument.
    #[serde(rename = "asset_quote", skip_serializing_if = "Option::is_none")]
    pub asset_quote: Option<String>,
    /// The highest price in the last 24 hours.
    #[serde(rename = "high", skip_serializing_if = "Option::is_none")]
    pub high: Option<String>,
    /// The lowest price in the last 24 hours.
    #[serde(rename = "low", skip_serializing_if = "Option::is_none")]
    pub low: Option<String>,
    /// The percentage change in price over the last 24 hours.
    #[serde(rename = "percent_change", skip_serializing_if = "Option::is_none")]
    pub percent_change: Option<String>,
    /// The trading volume in the base asset over the last 24 hours.
    #[serde(rename = "volume_base", skip_serializing_if = "Option::is_none")]
    pub volume_base: Option<String>,
    /// The trading volume in the quote asset over the last 24 hours.
    #[serde(rename = "volume_quote", skip_serializing_if = "Option::is_none")]
    pub volume_quote: Option<String>,
    /// The last traded price of the instrument.
    #[serde(rename = "last", skip_serializing_if = "Option::is_none")]
    pub last: Option<String>,
    /// The current best bid price for the instrument.
    #[serde(rename = "best_bid", skip_serializing_if = "Option::is_none")]
    pub best_bid: Option<String>,
    /// The current best ask price for the instrument.
    #[serde(rename = "best_ask", skip_serializing_if = "Option::is_none")]
    pub best_ask: Option<String>,
    /// The timestamp of the latest data point in Unix nanoseconds.
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i32>,
    /// The market category of the instrument (e.g., crypto).
    #[serde(rename = "market", skip_serializing_if = "Option::is_none")]
    pub market: Option<String>,
    /// Indicates if the trading instrument is frozen.
    #[serde(rename = "is_frozen", skip_serializing_if = "Option::is_none")]
    pub is_frozen: Option<bool>,
}

impl Ticker {
    pub fn new() -> Ticker {
        Ticker {
            instrument: None,
            asset_base: None,
            asset_quote: None,
            high: None,
            low: None,
            percent_change: None,
            volume_base: None,
            volume_quote: None,
            last: None,
            best_bid: None,
            best_ask: None,
            timestamp: None,
            market: None,
            is_frozen: None,
        }
    }
}

