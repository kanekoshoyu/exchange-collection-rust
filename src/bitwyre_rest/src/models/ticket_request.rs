/*
 * Bitwyre REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TicketRequest {
    /// Ticket type
    #[serde(rename = "issue_type", skip_serializing_if = "Option::is_none")]
    pub issue_type: Option<i32>,
    /// Ticket priority
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
    /// Subject of ticket
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    /// Description of ticket
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The image attachment file (in .png or .jpg or .jpeg or .pdf)
    #[serde(rename = "file", skip_serializing_if = "Option::is_none")]
    pub file: Option<std::path::PathBuf>,
}

impl TicketRequest {
    pub fn new() -> TicketRequest {
        TicketRequest {
            issue_type: None,
            priority: None,
            subject: None,
            description: None,
            file: None,
        }
    }
}

