/*
 * Bitwyre REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Contract {
    /// The name of the futures contract instrument.
    #[serde(rename = "instrument", skip_serializing_if = "Option::is_none")]
    pub instrument: Option<String>,
    /// Description of the contract, including delivery method, date, and strike price.
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<String>,
    /// The source used for pricing the contract.
    #[serde(rename = "pricing_source", skip_serializing_if = "Option::is_none")]
    pub pricing_source: Option<String>,
    /// The current Bitwyre index price for the contract.
    #[serde(rename = "bitwyre_index_price", skip_serializing_if = "Option::is_none")]
    pub bitwyre_index_price: Option<String>,
    /// The currency of the Bitwyre index price.
    #[serde(rename = "bitwyre_index_price_currency", skip_serializing_if = "Option::is_none")]
    pub bitwyre_index_price_currency: Option<String>,
    /// The trading volume in the last 24 hours.
    #[serde(rename = "24h_volume", skip_serializing_if = "Option::is_none")]
    pub param_24h_volume: Option<String>,
    /// The currency in which the 24-hour trading volume is measured.
    #[serde(rename = "24h_volume_currency", skip_serializing_if = "Option::is_none")]
    pub param_24h_volume_currency: Option<String>,
    /// The total open interest for the contract.
    #[serde(rename = "open_interest", skip_serializing_if = "Option::is_none")]
    pub open_interest: Option<String>,
    /// The interest rate for the contract.
    #[serde(rename = "interest_rate", skip_serializing_if = "Option::is_none")]
    pub interest_rate: Option<String>,
    /// The value of one contract in USD.
    #[serde(rename = "contract_value", skip_serializing_if = "Option::is_none")]
    pub contract_value: Option<String>,
    /// The initial margin required as a percentage of the contract value.
    #[serde(rename = "initial_margin_base_value", skip_serializing_if = "Option::is_none")]
    pub initial_margin_base_value: Option<String>,
    /// The maintenance margin required as a percentage of the contract value.
    #[serde(rename = "maintenance_margin_base_value", skip_serializing_if = "Option::is_none")]
    pub maintenance_margin_base_value: Option<String>,
}

impl Contract {
    pub fn new() -> Contract {
        Contract {
            instrument: None,
            details: None,
            pricing_source: None,
            bitwyre_index_price: None,
            bitwyre_index_price_currency: None,
            param_24h_volume: None,
            param_24h_volume_currency: None,
            open_interest: None,
            interest_rate: None,
            contract_value: None,
            initial_margin_base_value: None,
            maintenance_margin_base_value: None,
        }
    }
}

