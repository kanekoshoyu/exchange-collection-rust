/*
 * Bitwyre REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Kyc {
    #[serde(rename = "identity_card_back_scan_uuid", skip_serializing_if = "Option::is_none")]
    pub identity_card_back_scan_uuid: Option<uuid::Uuid>,
    #[serde(rename = "identity_card_front_scan_uuid", skip_serializing_if = "Option::is_none")]
    pub identity_card_front_scan_uuid: Option<uuid::Uuid>,
    #[serde(rename = "rejection_reason", skip_serializing_if = "Option::is_none")]
    pub rejection_reason: Option<String>,
    #[serde(rename = "selfie_photo_uuid", skip_serializing_if = "Option::is_none")]
    pub selfie_photo_uuid: Option<uuid::Uuid>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

impl Kyc {
    pub fn new() -> Kyc {
        Kyc {
            identity_card_back_scan_uuid: None,
            identity_card_front_scan_uuid: None,
            rejection_reason: None,
            selfie_photo_uuid: None,
            status: None,
        }
    }
}

