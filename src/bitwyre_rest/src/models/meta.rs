/*
 * Bitwyre REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Meta {
    #[serde(rename = "has_next", skip_serializing_if = "Option::is_none")]
    pub has_next: Option<bool>,
    #[serde(rename = "has_prev", skip_serializing_if = "Option::is_none")]
    pub has_prev: Option<bool>,
    #[serde(rename = "next_page", skip_serializing_if = "Option::is_none")]
    pub next_page: Option<i32>,
    #[serde(rename = "prev_page", skip_serializing_if = "Option::is_none")]
    pub prev_page: Option<i32>,
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    #[serde(rename = "pages", skip_serializing_if = "Option::is_none")]
    pub pages: Option<i32>,
    #[serde(rename = "total_count", skip_serializing_if = "Option::is_none")]
    pub total_count: Option<i32>,
}

impl Meta {
    pub fn new() -> Meta {
        Meta {
            has_next: None,
            has_prev: None,
            next_page: None,
            prev_page: None,
            page: None,
            pages: None,
            total_count: None,
        }
    }
}

