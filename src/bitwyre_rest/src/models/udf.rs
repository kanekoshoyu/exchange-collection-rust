/*
 * Bitwyre REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Udf {
    #[serde(rename = "exchanges", skip_serializing_if = "Option::is_none")]
    pub exchanges: Option<Vec<models::UdfExchangesInner>>,
    #[serde(rename = "supported_resolutions", skip_serializing_if = "Option::is_none")]
    pub supported_resolutions: Option<Vec<String>>,
    #[serde(rename = "supports_group_request", skip_serializing_if = "Option::is_none")]
    pub supports_group_request: Option<bool>,
    #[serde(rename = "supports_marks", skip_serializing_if = "Option::is_none")]
    pub supports_marks: Option<bool>,
    #[serde(rename = "supports_search", skip_serializing_if = "Option::is_none")]
    pub supports_search: Option<bool>,
    #[serde(rename = "supports_time", skip_serializing_if = "Option::is_none")]
    pub supports_time: Option<bool>,
    #[serde(rename = "supports_timescale_marks", skip_serializing_if = "Option::is_none")]
    pub supports_timescale_marks: Option<bool>,
    #[serde(rename = "symbols_types", skip_serializing_if = "Option::is_none")]
    pub symbols_types: Option<Vec<models::UdfSymbolsTypesInner>>,
}

impl Udf {
    pub fn new() -> Udf {
        Udf {
            exchanges: None,
            supported_resolutions: None,
            supports_group_request: None,
            supports_marks: None,
            supports_search: None,
            supports_time: None,
            supports_timescale_marks: None,
            symbols_types: None,
        }
    }
}

