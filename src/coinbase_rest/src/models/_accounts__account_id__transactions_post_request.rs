/*
 * Coinbase API
 *
 * The Coinbase v2 API (converted from Swagger to OpenAPI by kanekoshoyu)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountsAccountIdTransactionsPostRequest {
    /// Type should be \"send\" for sending money, or \"request\" for requesting money.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// A bitcoin address (send only) or an email of the recipient (send or request)
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<String>,
    /// Amount to be sent/requested.
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    /// Currency for the amount
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
    /// Notes to be included in the email that the recipient receives
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// (Send only) Donâ€™t send notification emails for small amounts (e.g. tips)
    #[serde(rename = "skip_notifications", skip_serializing_if = "Option::is_none")]
    pub skip_notifications: Option<bool>,
    /// (Send only) Transaction fee in BTC if you would like to pay it. Coinbase pays transaction fees on payments greater than or equal to 0.0001 BTC. But for smaller amounts you may want to add your own amount. Fees can be added as a string, such as 0.0005
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<String>,
    /// (Send only) A token to ensure idempotence. If a previous transaction with the same idem parameter already exists for this sender, that previous transaction will be returned and a new one will not be created. Max length 100 characters
    #[serde(rename = "idem", skip_serializing_if = "Option::is_none")]
    pub idem: Option<String>,
}

impl AccountsAccountIdTransactionsPostRequest {
    pub fn new() -> AccountsAccountIdTransactionsPostRequest {
        AccountsAccountIdTransactionsPostRequest {
            r#type: None,
            to: None,
            amount: None,
            currency: None,
            description: None,
            skip_notifications: None,
            fee: None,
            idem: None,
        }
    }
}

