/*
 * Coincheck Crypto Exchange
 *
 * Welcome to Coincheck API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BankRequest {
    /// Bank name
    #[serde(rename = "bank_name")]
    pub bank_name: String,
    /// Branch name
    #[serde(rename = "branch_name")]
    pub branch_name: String,
    /// Type of bank account
    #[serde(rename = "bank_account_type")]
    pub bank_account_type: BankAccountType,
    /// Bank account number
    #[serde(rename = "number")]
    pub number: String,
    /// Bank account name
    #[serde(rename = "name")]
    pub name: String,
}

impl BankRequest {
    pub fn new(bank_name: String, branch_name: String, bank_account_type: BankAccountType, number: String, name: String) -> BankRequest {
        BankRequest {
            bank_name,
            branch_name,
            bank_account_type,
            number,
            name,
        }
    }
}
/// Type of bank account
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BankAccountType {
    #[serde(rename = "futsu")]
    Futsu,
    #[serde(rename = "toza")]
    Toza,
}

impl Default for BankAccountType {
    fn default() -> BankAccountType {
        Self::Futsu
    }
}

