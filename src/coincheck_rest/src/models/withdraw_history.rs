/*
 * Coincheck Crypto Exchange
 *
 * Welcome to Coincheck API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WithdrawHistory {
    /// ID of the withdrawal request
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Withdraw status (pending, processing, finished, canceled)
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// Amount withdrawn
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    /// Currency of the withdrawal
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
    /// Date the withdrawal was created
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Bank account ID used for withdrawal
    #[serde(rename = "bank_account_id", skip_serializing_if = "Option::is_none")]
    pub bank_account_id: Option<i32>,
    /// Fee for the withdrawal
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<String>,
    /// Indicates if fast withdrawal was used
    #[serde(rename = "is_fast", skip_serializing_if = "Option::is_none")]
    pub is_fast: Option<bool>,
}

impl WithdrawHistory {
    pub fn new() -> WithdrawHistory {
        WithdrawHistory {
            id: None,
            status: None,
            amount: None,
            currency: None,
            created_at: None,
            bank_account_id: None,
            fee: None,
            is_fast: None,
        }
    }
}

