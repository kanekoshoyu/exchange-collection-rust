/*
 * Coincheck Crypto Exchange
 *
 * Welcome to Coincheck API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BankResponseData {
    /// ID of the registered bank account
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Bank name
    #[serde(rename = "bank_name", skip_serializing_if = "Option::is_none")]
    pub bank_name: Option<String>,
    /// Branch name
    #[serde(rename = "branch_name", skip_serializing_if = "Option::is_none")]
    pub branch_name: Option<String>,
    /// Type of bank account
    #[serde(rename = "bank_account_type", skip_serializing_if = "Option::is_none")]
    pub bank_account_type: Option<BankAccountType>,
    /// Bank account number
    #[serde(rename = "number", skip_serializing_if = "Option::is_none")]
    pub number: Option<String>,
    /// Bank account name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl BankResponseData {
    pub fn new() -> BankResponseData {
        BankResponseData {
            id: None,
            bank_name: None,
            branch_name: None,
            bank_account_type: None,
            number: None,
            name: None,
        }
    }
}
/// Type of bank account
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BankAccountType {
    #[serde(rename = "futsu")]
    Futsu,
    #[serde(rename = "toza")]
    Toza,
}

impl Default for BankAccountType {
    fn default() -> BankAccountType {
        Self::Futsu
    }
}

