/*
 * Coincheck Crypto Exchange
 *
 * Welcome to Coincheck API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Tickers {
    /// Latest quote.
    #[serde(rename = "last", skip_serializing_if = "Option::is_none")]
    pub last: Option<f64>,
    /// Current highest buying order.
    #[serde(rename = "bid", skip_serializing_if = "Option::is_none")]
    pub bid: Option<f64>,
    /// Current lowest selling order.
    #[serde(rename = "ask", skip_serializing_if = "Option::is_none")]
    pub ask: Option<f64>,
    /// The highest price within 24 hours.
    #[serde(rename = "high", skip_serializing_if = "Option::is_none")]
    pub high: Option<f64>,
    /// The lowest price within 24 hours.
    #[serde(rename = "low", skip_serializing_if = "Option::is_none")]
    pub low: Option<f64>,
    /// 24-hour trading volume.
    #[serde(rename = "volume", skip_serializing_if = "Option::is_none")]
    pub volume: Option<String>,
    /// Current time in UNIX timestamp format.
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i32>,
}

impl Tickers {
    pub fn new() -> Tickers {
        Tickers {
            last: None,
            bid: None,
            ask: None,
            high: None,
            low: None,
            volume: None,
            timestamp: None,
        }
    }
}

