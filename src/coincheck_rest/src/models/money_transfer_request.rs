/*
 * Coincheck Crypto Exchange
 *
 * Welcome to Coincheck API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MoneyTransferRequest {
    /// Remittee List ID for the recipient.
    #[serde(rename = "remittee_list_id", skip_serializing_if = "Option::is_none")]
    pub remittee_list_id: Option<i32>,
    /// Amount to send.
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    /// Purpose type for the transaction.
    #[serde(rename = "purpose_type", skip_serializing_if = "Option::is_none")]
    pub purpose_type: Option<PurposeType>,
    #[serde(rename = "purpose_details", skip_serializing_if = "Option::is_none")]
    pub purpose_details: Option<Box<models::MoneyTransferRequestPurposeDetails>>,
}

impl MoneyTransferRequest {
    pub fn new() -> MoneyTransferRequest {
        MoneyTransferRequest {
            remittee_list_id: None,
            amount: None,
            purpose_type: None,
            purpose_details: None,
        }
    }
}
/// Purpose type for the transaction.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PurposeType {
    #[serde(rename = "inheritance_or_donating")]
    InheritanceOrDonating,
    #[serde(rename = "payment_of_importing")]
    PaymentOfImporting,
    #[serde(rename = "payment_of_intermediary_trade")]
    PaymentOfIntermediaryTrade,
    #[serde(rename = "payment_of_domestic_transactions")]
    PaymentOfDomesticTransactions,
    #[serde(rename = "keep_own_account")]
    KeepOwnAccount,
    #[serde(rename = "keep_own_private_wallet")]
    KeepOwnPrivateWallet,
    #[serde(rename = "other")]
    Other,
}

impl Default for PurposeType {
    fn default() -> PurposeType {
        Self::InheritanceOrDonating
    }
}

