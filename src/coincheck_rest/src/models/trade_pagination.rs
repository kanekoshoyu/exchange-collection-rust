/*
 * Coincheck Crypto Exchange
 *
 * Welcome to Coincheck API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradePagination {
    /// Number of records returned.
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    /// Order of the records (asc/desc).
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<String>,
    /// Cursor for pagination.
    #[serde(rename = "starting_after", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub starting_after: Option<Option<String>>,
    /// Cursor for pagination.
    #[serde(rename = "ending_before", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ending_before: Option<Option<String>>,
}

impl TradePagination {
    pub fn new() -> TradePagination {
        TradePagination {
            limit: None,
            order: None,
            starting_after: None,
            ending_before: None,
        }
    }
}

