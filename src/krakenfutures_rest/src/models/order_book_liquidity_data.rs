/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderBookLiquidityData {
    /// Array of liquidity values at 0.05
    #[serde(rename = "liquidity_005")]
    pub liquidity_005: Vec<f64>,
    /// Array of liquidity values at 0.1
    #[serde(rename = "liquidity_01")]
    pub liquidity_01: Vec<f64>,
    /// Array of liquidity values at 0.25
    #[serde(rename = "liquidity_025")]
    pub liquidity_025: Vec<f64>,
    /// Array of liquidity values at 0.5
    #[serde(rename = "liquidity_05")]
    pub liquidity_05: Vec<f64>,
    /// Array of liquidity values at 1.0
    #[serde(rename = "liquidity_10")]
    pub liquidity_10: Vec<f64>,
    /// Array of liquidity values at 10.0
    #[serde(rename = "liquidity_100")]
    pub liquidity_100: Vec<f64>,
}

impl OrderBookLiquidityData {
    pub fn new(liquidity_005: Vec<f64>, liquidity_01: Vec<f64>, liquidity_025: Vec<f64>, liquidity_05: Vec<f64>, liquidity_10: Vec<f64>, liquidity_100: Vec<f64>) -> OrderBookLiquidityData {
        OrderBookLiquidityData {
            liquidity_005,
            liquidity_01,
            liquidity_025,
            liquidity_05,
            liquidity_10,
            liquidity_100,
        }
    }
}

