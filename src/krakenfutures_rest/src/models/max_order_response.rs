/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MaxOrderResponse {
    /// Server time in Coordinated Universal Time (UTC)
    #[serde(rename = "serverTime", skip_serializing_if = "Option::is_none")]
    pub server_time: Option<String>,
    #[serde(rename = "result", skip_serializing_if = "Option::is_none")]
    pub result: Option<Result>,
    /// The maximum size of a buy order at the limit price or null if there is no market
    #[serde(rename = "maxBuySize", skip_serializing_if = "Option::is_none")]
    pub max_buy_size: Option<f64>,
    /// The maximum size of a sell order at the limit price or null if there is no market
    #[serde(rename = "maxSellSize", skip_serializing_if = "Option::is_none")]
    pub max_sell_size: Option<f64>,
    /// The limit price of the buy order or null if the order type was mkt and there is no market
    #[serde(rename = "buyPrice", skip_serializing_if = "Option::is_none")]
    pub buy_price: Option<f64>,
    /// The limit price of the sell order or null if the order type was mkt and there is no market
    #[serde(rename = "sellPrice", skip_serializing_if = "Option::is_none")]
    pub sell_price: Option<f64>,
}

impl MaxOrderResponse {
    pub fn new() -> MaxOrderResponse {
        MaxOrderResponse {
            server_time: None,
            result: None,
            max_buy_size: None,
            max_sell_size: None,
            buy_price: None,
            sell_price: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Result {
    #[serde(rename = "success")]
    Success,
}

impl Default for Result {
    fn default() -> Result {
        Self::Success
    }
}

