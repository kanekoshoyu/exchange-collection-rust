/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalyticsTopTrader {
    /// Array of open interest values
    #[serde(rename = "openInterest")]
    pub open_interest: Vec<f64>,
    /// Array of long counts
    #[serde(rename = "longCount")]
    pub long_count: Vec<i32>,
    /// Array of short counts
    #[serde(rename = "shortCount")]
    pub short_count: Vec<i32>,
    /// Array of long percentage values
    #[serde(rename = "longPercent")]
    pub long_percent: Vec<f64>,
    /// Array of short percentage values
    #[serde(rename = "shortPercent")]
    pub short_percent: Vec<f64>,
    /// Array of ratio values
    #[serde(rename = "ratio")]
    pub ratio: Vec<f64>,
}

impl AnalyticsTopTrader {
    pub fn new(open_interest: Vec<f64>, long_count: Vec<i32>, short_count: Vec<i32>, long_percent: Vec<f64>, short_percent: Vec<f64>, ratio: Vec<f64>) -> AnalyticsTopTrader {
        AnalyticsTopTrader {
            open_interest,
            long_count,
            short_count,
            long_percent,
            short_percent,
            ratio,
        }
    }
}

