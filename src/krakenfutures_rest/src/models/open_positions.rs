/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OpenPositions {
    /// The side of the trade.
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<Side>,
    /// The trading symbol.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// The price at which the trade was executed.
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<f64>,
    /// The timestamp when the trade was filled.
    #[serde(rename = "fillTime", skip_serializing_if = "Option::is_none")]
    pub fill_time: Option<String>,
    /// The size of the trade.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<f64>,
    /// The unrealized funding related to the trade.
    #[serde(rename = "unrealizedFunding", skip_serializing_if = "Option::is_none")]
    pub unrealized_funding: Option<f64>,
}

impl OpenPositions {
    pub fn new() -> OpenPositions {
        OpenPositions {
            side: None,
            symbol: None,
            price: None,
            fill_time: None,
            size: None,
            unrealized_funding: None,
        }
    }
}
/// The side of the trade.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Side {
    #[serde(rename = "long")]
    Long,
    #[serde(rename = "short")]
    Short,
}

impl Default for Side {
    fn default() -> Side {
        Self::Long
    }
}

