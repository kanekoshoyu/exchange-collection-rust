/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BatchOrderEdit {
    /// Unique client order identifier.
    #[serde(rename = "cliOrdId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cli_ord_id: Option<Option<String>>,
    /// Order ID.
    #[serde(rename = "order_id", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<uuid::Uuid>,
    /// Always edit.
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<Order>,
    /// The size associated with the order.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<f64>,
    /// The limit price associated with the order.
    #[serde(rename = "limitPrice", skip_serializing_if = "Option::is_none")]
    pub limit_price: Option<f64>,
    /// The stop price associated with a stop order. Required if old orderType is stp.
    #[serde(rename = "stopPrice", skip_serializing_if = "Option::is_none")]
    pub stop_price: Option<f64>,
    /// Maximum distance the trailing stop's trigger price may trail behind the trigger signal.
    #[serde(rename = "trailingStopMaxDeviation", skip_serializing_if = "Option::is_none")]
    pub trailing_stop_max_deviation: Option<f64>,
    /// Defines how the trailing trigger price is calculated from the requested trigger signal.
    #[serde(rename = "trailingStopDeviationUnit", skip_serializing_if = "Option::is_none")]
    pub trailing_stop_deviation_unit: Option<TrailingStopDeviationUnit>,
}

impl BatchOrderEdit {
    pub fn new() -> BatchOrderEdit {
        BatchOrderEdit {
            cli_ord_id: None,
            order_id: None,
            order: None,
            size: None,
            limit_price: None,
            stop_price: None,
            trailing_stop_max_deviation: None,
            trailing_stop_deviation_unit: None,
        }
    }
}
/// Always edit.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Order {
    #[serde(rename = "edit")]
    Edit,
}

impl Default for Order {
    fn default() -> Order {
        Self::Edit
    }
}
/// Defines how the trailing trigger price is calculated from the requested trigger signal.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TrailingStopDeviationUnit {
    #[serde(rename = "PERCENT")]
    Percent,
    #[serde(rename = "QUOTE_CURRENCY")]
    QuoteCurrency,
}

impl Default for TrailingStopDeviationUnit {
    fn default() -> TrailingStopDeviationUnit {
        Self::Percent
    }
}

