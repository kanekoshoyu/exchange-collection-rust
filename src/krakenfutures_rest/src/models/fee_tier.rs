/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FeeTier {
    /// Percentage value of the maker fee in the tier.
    #[serde(rename = "makerFee", skip_serializing_if = "Option::is_none")]
    pub maker_fee: Option<f64>,
    /// Percentage value of the taker fee in the tier.
    #[serde(rename = "takerFee", skip_serializing_if = "Option::is_none")]
    pub taker_fee: Option<f64>,
    /// Minimum 30-day USD volume for the fee tier to be applicable.
    #[serde(rename = "usdVolume", skip_serializing_if = "Option::is_none")]
    pub usd_volume: Option<f64>,
}

impl FeeTier {
    pub fn new() -> FeeTier {
        FeeTier {
            maker_fee: None,
            taker_fee: None,
            usd_volume: None,
        }
    }
}

