/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssignmentProgramRequest {
    /// Type of contract for the assignment program preference. Options can be found in the 'accounts' structure in the Get Wallets /accounts response.
    #[serde(rename = "contractType", skip_serializing_if = "Option::is_none")]
    pub contract_type: Option<String>,
    /// A specific contract for this assignment program preference. Required for \"flex\" contracts if base/quote currencies are not included.
    #[serde(rename = "contract", skip_serializing_if = "Option::is_none")]
    pub contract: Option<String>,
    /// The maximum size for an assignment.
    #[serde(rename = "maxSize", skip_serializing_if = "Option::is_none")]
    pub max_size: Option<f64>,
    /// The maximum position.
    #[serde(rename = "maxPosition", skip_serializing_if = "Option::is_none")]
    pub max_position: Option<f64>,
    /// Indicates if long positions are accepted. This field is required.
    #[serde(rename = "acceptLong", skip_serializing_if = "Option::is_none")]
    pub accept_long: Option<bool>,
    /// Indicates if short positions are accepted. This field is required.
    #[serde(rename = "acceptShort", skip_serializing_if = "Option::is_none")]
    pub accept_short: Option<bool>,
    /// When the program preference is valid. This field is required.
    #[serde(rename = "timeFrame", skip_serializing_if = "Option::is_none")]
    pub time_frame: Option<String>,
    /// Indicates if the assignment is enabled. This field is required.
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
}

impl AssignmentProgramRequest {
    pub fn new() -> AssignmentProgramRequest {
        AssignmentProgramRequest {
            contract_type: None,
            contract: None,
            max_size: None,
            max_position: None,
            accept_long: None,
            accept_short: None,
            time_frame: None,
            enabled: None,
        }
    }
}

