/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Position {
    /// The symbol of the futures to which the order refers.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// The percentile rank of the trader's position in the unwind queue.
    #[serde(rename = "percentile", skip_serializing_if = "Option::is_none")]
    pub percentile: Option<Percentile>,
}

impl Position {
    pub fn new() -> Position {
        Position {
            symbol: None,
            percentile: None,
        }
    }
}
/// The percentile rank of the trader's position in the unwind queue.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Percentile {
    #[serde(rename = "20")]
    Variant20,
    #[serde(rename = "40")]
    Variant40,
    #[serde(rename = "80")]
    Variant80,
    #[serde(rename = "100")]
    Variant100,
}

impl Default for Percentile {
    fn default() -> Percentile {
        Self::Variant20
    }
}

