/*
 * Kraken API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Notification {
    /// The time that the notification is taking effect.
    #[serde(rename = "effectiveTime", skip_serializing_if = "Option::is_none")]
    pub effective_time: Option<String>,
    /// The notification note. A short description about the specific notification.
    #[serde(rename = "note", skip_serializing_if = "Option::is_none")]
    pub note: Option<String>,
    /// The notification priorities.
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<Priority>,
    /// The notification types.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    /// The expected downtime in minutes or absent if no downtime is expected.
    #[serde(rename = "expectedDowntimeMinutes", skip_serializing_if = "Option::is_none")]
    pub expected_downtime_minutes: Option<i32>,
}

impl Notification {
    pub fn new() -> Notification {
        Notification {
            effective_time: None,
            note: None,
            priority: None,
            r#type: None,
            expected_downtime_minutes: None,
        }
    }
}
/// The notification priorities.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Priority {
    #[serde(rename = "low")]
    Low,
    #[serde(rename = "medium")]
    Medium,
    #[serde(rename = "high")]
    High,
}

impl Default for Priority {
    fn default() -> Priority {
        Self::Low
    }
}
/// The notification types.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "new_feature")]
    NewFeature,
    #[serde(rename = "bug_fix")]
    BugFix,
    #[serde(rename = "settlement")]
    Settlement,
    #[serde(rename = "general")]
    General,
    #[serde(rename = "maintenance")]
    Maintenance,
    #[serde(rename = "market")]
    Market,
}

impl Default for Type {
    fn default() -> Type {
        Self::NewFeature
    }
}

