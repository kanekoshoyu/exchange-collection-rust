/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1SubAccountTransactionStatisticsGet200ResponseTradeInfoVosInner {
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<i64>,
    #[serde(rename = "btc", skip_serializing_if = "Option::is_none")]
    pub btc: Option<f32>,
    #[serde(rename = "btcFutures", skip_serializing_if = "Option::is_none")]
    pub btc_futures: Option<f32>,
    #[serde(rename = "btcMargin", skip_serializing_if = "Option::is_none")]
    pub btc_margin: Option<f32>,
    #[serde(rename = "busd", skip_serializing_if = "Option::is_none")]
    pub busd: Option<f32>,
    #[serde(rename = "busdFutures", skip_serializing_if = "Option::is_none")]
    pub busd_futures: Option<f32>,
    #[serde(rename = "busdMargin", skip_serializing_if = "Option::is_none")]
    pub busd_margin: Option<f32>,
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<i64>,
}

impl SapiV1SubAccountTransactionStatisticsGet200ResponseTradeInfoVosInner {
    pub fn new() -> SapiV1SubAccountTransactionStatisticsGet200ResponseTradeInfoVosInner {
        SapiV1SubAccountTransactionStatisticsGet200ResponseTradeInfoVosInner {
            user_id: None,
            btc: None,
            btc_futures: None,
            btc_margin: None,
            busd: None,
            busd_futures: None,
            busd_margin: None,
            date: None,
        }
    }
}

