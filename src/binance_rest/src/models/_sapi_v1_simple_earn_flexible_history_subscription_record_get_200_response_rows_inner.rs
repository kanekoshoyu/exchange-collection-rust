/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1SimpleEarnFlexibleHistorySubscriptionRecordGet200ResponseRowsInner {
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "asset")]
    pub asset: String,
    #[serde(rename = "time")]
    pub time: i64,
    #[serde(rename = "purchaseId")]
    pub purchase_id: i64,
    /// AUTO for auto subscribe, NORMAL for normal subscription, CONVERT for Locked to Flexible, LOAN for flexible loan collateral, AI for Auto Invest subscribe, TRANSFER for Locked Savings to Flexible
    #[serde(rename = "type")]
    pub r#type: String,
    /// SPOT, FUNDING, SPOTANDFUNDING
    #[serde(rename = "sourceAccount")]
    pub source_account: String,
    /// Display if sourceAccount is SPOTANDFUNDING 
    #[serde(rename = "amtFromSpot")]
    pub amt_from_spot: String,
    /// Display if sourceAccount is SPOTANDFUNDING
    #[serde(rename = "amtFromFunding")]
    pub amt_from_funding: String,
    /// PURCHASING/SUCCESS/FAILED
    #[serde(rename = "status")]
    pub status: String,
}

impl SapiV1SimpleEarnFlexibleHistorySubscriptionRecordGet200ResponseRowsInner {
    pub fn new(amount: String, asset: String, time: i64, purchase_id: i64, r#type: String, source_account: String, amt_from_spot: String, amt_from_funding: String, status: String) -> SapiV1SimpleEarnFlexibleHistorySubscriptionRecordGet200ResponseRowsInner {
        SapiV1SimpleEarnFlexibleHistorySubscriptionRecordGet200ResponseRowsInner {
            amount,
            asset,
            time,
            purchase_id,
            r#type,
            source_account,
            amt_from_spot,
            amt_from_funding,
            status,
        }
    }
}

