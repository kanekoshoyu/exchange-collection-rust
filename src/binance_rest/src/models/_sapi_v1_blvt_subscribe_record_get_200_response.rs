/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1BlvtSubscribeRecordGet200Response {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "tokenName")]
    pub token_name: String,
    /// Subscription amount
    #[serde(rename = "amount")]
    pub amount: String,
    /// NAV price of subscription
    #[serde(rename = "nav")]
    pub nav: String,
    /// Subscription fee in usdt
    #[serde(rename = "fee")]
    pub fee: String,
    /// Subscription cost in usdt
    #[serde(rename = "totalCharge")]
    pub total_charge: String,
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
}

impl SapiV1BlvtSubscribeRecordGet200Response {
    pub fn new(id: i64, token_name: String, amount: String, nav: String, fee: String, total_charge: String, timestamp: i64) -> SapiV1BlvtSubscribeRecordGet200Response {
        SapiV1BlvtSubscribeRecordGet200Response {
            id,
            token_name,
            amount,
            nav,
            fee,
            total_charge,
            timestamp,
        }
    }
}

