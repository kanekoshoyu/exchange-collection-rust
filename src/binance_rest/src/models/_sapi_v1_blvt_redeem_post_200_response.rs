/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1BlvtRedeemPost200Response {
    #[serde(rename = "id")]
    pub id: i64,
    /// S, P, and F for \"success\", \"pending\", and \"failure\"
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "tokenName")]
    pub token_name: String,
    /// Redemption token amount
    #[serde(rename = "redeemAmount")]
    pub redeem_amount: String,
    /// Redemption value in usdt
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
}

impl SapiV1BlvtRedeemPost200Response {
    pub fn new(id: i64, status: String, token_name: String, redeem_amount: String, amount: String, timestamp: i64) -> SapiV1BlvtRedeemPost200Response {
        SapiV1BlvtRedeemPost200Response {
            id,
            status,
            token_name,
            redeem_amount,
            amount,
            timestamp,
        }
    }
}

