/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1BlvtRedeemRecordGet200ResponseInner {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "tokenName")]
    pub token_name: String,
    /// Redemption amount
    #[serde(rename = "amount")]
    pub amount: String,
    /// NAV of redemption
    #[serde(rename = "nav")]
    pub nav: String,
    /// Reemption fee
    #[serde(rename = "fee")]
    pub fee: String,
    /// Net redemption value in usdt
    #[serde(rename = "netProceed")]
    pub net_proceed: String,
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
}

impl SapiV1BlvtRedeemRecordGet200ResponseInner {
    pub fn new(id: i64, token_name: String, amount: String, nav: String, fee: String, net_proceed: String, timestamp: i64) -> SapiV1BlvtRedeemRecordGet200ResponseInner {
        SapiV1BlvtRedeemRecordGet200ResponseInner {
            id,
            token_name,
            amount,
            nav,
            fee,
            net_proceed,
            timestamp,
        }
    }
}

