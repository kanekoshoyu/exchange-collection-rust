/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1MarginTradeCoeffGet200Response {
    /// Account's currently max borrowable amount with sufficient system availability
    #[serde(rename = "normalBar", skip_serializing_if = "Option::is_none")]
    pub normal_bar: Option<String>,
    /// Max borrowable amount limited by the account level
    #[serde(rename = "marginCallBar", skip_serializing_if = "Option::is_none")]
    pub margin_call_bar: Option<String>,
    /// Liquidation Margin Ratio
    #[serde(rename = "forceLiquidationBar", skip_serializing_if = "Option::is_none")]
    pub force_liquidation_bar: Option<String>,
}

impl SapiV1MarginTradeCoeffGet200Response {
    pub fn new() -> SapiV1MarginTradeCoeffGet200Response {
        SapiV1MarginTradeCoeffGet200Response {
            normal_bar: None,
            margin_call_bar: None,
            force_liquidation_bar: None,
        }
    }
}

