/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1MiningStatisticsUserStatusGet200ResponseData {
    #[serde(rename = "fifteenMinHashRate")]
    pub fifteen_min_hash_rate: String,
    #[serde(rename = "dayHashRate")]
    pub day_hash_rate: String,
    #[serde(rename = "validNum")]
    pub valid_num: i64,
    #[serde(rename = "invalidNum")]
    pub invalid_num: i64,
    #[serde(rename = "profitToday")]
    pub profit_today: Box<models::SapiV1MiningStatisticsUserStatusGet200ResponseDataProfitToday>,
    #[serde(rename = "profitYesterday")]
    pub profit_yesterday: Box<models::SapiV1MiningStatisticsUserStatusGet200ResponseDataProfitToday>,
    #[serde(rename = "userName")]
    pub user_name: String,
    #[serde(rename = "unit")]
    pub unit: String,
    #[serde(rename = "algo")]
    pub algo: String,
}

impl SapiV1MiningStatisticsUserStatusGet200ResponseData {
    pub fn new(fifteen_min_hash_rate: String, day_hash_rate: String, valid_num: i64, invalid_num: i64, profit_today: models::SapiV1MiningStatisticsUserStatusGet200ResponseDataProfitToday, profit_yesterday: models::SapiV1MiningStatisticsUserStatusGet200ResponseDataProfitToday, user_name: String, unit: String, algo: String) -> SapiV1MiningStatisticsUserStatusGet200ResponseData {
        SapiV1MiningStatisticsUserStatusGet200ResponseData {
            fifteen_min_hash_rate,
            day_hash_rate,
            valid_num,
            invalid_num,
            profit_today: Box::new(profit_today),
            profit_yesterday: Box::new(profit_yesterday),
            user_name,
            unit,
            algo,
        }
    }
}

