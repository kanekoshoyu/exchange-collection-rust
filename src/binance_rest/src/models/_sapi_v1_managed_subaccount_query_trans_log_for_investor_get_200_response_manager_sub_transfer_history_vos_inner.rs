/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1ManagedSubaccountQueryTransLogForInvestorGet200ResponseManagerSubTransferHistoryVosInner {
    #[serde(rename = "fromEmail")]
    pub from_email: String,
    #[serde(rename = "fromAccountType")]
    pub from_account_type: String,
    #[serde(rename = "toEmail")]
    pub to_email: String,
    #[serde(rename = "toAccountType")]
    pub to_account_type: String,
    #[serde(rename = "asset")]
    pub asset: String,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "scheduledData")]
    pub scheduled_data: i64,
    #[serde(rename = "createTime")]
    pub create_time: i64,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "tranId")]
    pub tran_id: i32,
}

impl SapiV1ManagedSubaccountQueryTransLogForInvestorGet200ResponseManagerSubTransferHistoryVosInner {
    pub fn new(from_email: String, from_account_type: String, to_email: String, to_account_type: String, asset: String, amount: String, scheduled_data: i64, create_time: i64, status: String, tran_id: i32) -> SapiV1ManagedSubaccountQueryTransLogForInvestorGet200ResponseManagerSubTransferHistoryVosInner {
        SapiV1ManagedSubaccountQueryTransLogForInvestorGet200ResponseManagerSubTransferHistoryVosInner {
            from_email,
            from_account_type,
            to_email,
            to_account_type,
            asset,
            amount,
            scheduled_data,
            create_time,
            status,
            tran_id,
        }
    }
}

