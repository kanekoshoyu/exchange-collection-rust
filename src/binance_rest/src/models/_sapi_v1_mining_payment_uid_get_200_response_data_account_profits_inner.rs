/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1MiningPaymentUidGet200ResponseDataAccountProfitsInner {
    #[serde(rename = "time")]
    pub time: i64,
    #[serde(rename = "coinName")]
    pub coin_name: String,
    /// 0:Referral 1:Refund 2:Rebate
    #[serde(rename = "type")]
    pub r#type: i32,
    /// puid
    #[serde(rename = "puid")]
    pub puid: i32,
    /// Mining account
    #[serde(rename = "subName")]
    pub sub_name: String,
    #[serde(rename = "amount")]
    pub amount: f64,
}

impl SapiV1MiningPaymentUidGet200ResponseDataAccountProfitsInner {
    pub fn new(time: i64, coin_name: String, r#type: i32, puid: i32, sub_name: String, amount: f64) -> SapiV1MiningPaymentUidGet200ResponseDataAccountProfitsInner {
        SapiV1MiningPaymentUidGet200ResponseDataAccountProfitsInner {
            time,
            coin_name,
            r#type,
            puid,
            sub_name,
            amount,
        }
    }
}

