/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1SimpleEarnLockedPositionGet200ResponseRowsInner {
    #[serde(rename = "positionId")]
    pub position_id: String,
    #[serde(rename = "projectId")]
    pub project_id: String,
    #[serde(rename = "asset")]
    pub asset: String,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "purchaseTime")]
    pub purchase_time: String,
    #[serde(rename = "duration")]
    pub duration: String,
    #[serde(rename = "accrualDays")]
    pub accrual_days: String,
    #[serde(rename = "rewardAsset")]
    pub reward_asset: String,
    #[serde(rename = "APY")]
    pub apy: String,
    #[serde(rename = "isRenewable")]
    pub is_renewable: bool,
    #[serde(rename = "isAutoRenew")]
    pub is_auto_renew: bool,
    #[serde(rename = "redeemDate")]
    pub redeem_date: String,
}

impl SapiV1SimpleEarnLockedPositionGet200ResponseRowsInner {
    pub fn new(position_id: String, project_id: String, asset: String, amount: String, purchase_time: String, duration: String, accrual_days: String, reward_asset: String, apy: String, is_renewable: bool, is_auto_renew: bool, redeem_date: String) -> SapiV1SimpleEarnLockedPositionGet200ResponseRowsInner {
        SapiV1SimpleEarnLockedPositionGet200ResponseRowsInner {
            position_id,
            project_id,
            asset,
            amount,
            purchase_time,
            duration,
            accrual_days,
            reward_asset,
            apy,
            is_renewable,
            is_auto_renew,
            redeem_date,
        }
    }
}

