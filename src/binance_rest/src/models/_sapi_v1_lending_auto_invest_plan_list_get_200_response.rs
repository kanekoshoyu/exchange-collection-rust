/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1LendingAutoInvestPlanListGet200Response {
    #[serde(rename = "planValueInUSD")]
    pub plan_value_in_usd: String,
    #[serde(rename = "planValueInBTC")]
    pub plan_value_in_btc: String,
    #[serde(rename = "pnlInUSD")]
    pub pnl_in_usd: String,
    #[serde(rename = "roi")]
    pub roi: String,
    #[serde(rename = "plan")]
    pub plan: Vec<models::SapiV1LendingAutoInvestPlanListGet200ResponsePlanInner>,
}

impl SapiV1LendingAutoInvestPlanListGet200Response {
    pub fn new(plan_value_in_usd: String, plan_value_in_btc: String, pnl_in_usd: String, roi: String, plan: Vec<models::SapiV1LendingAutoInvestPlanListGet200ResponsePlanInner>) -> SapiV1LendingAutoInvestPlanListGet200Response {
        SapiV1LendingAutoInvestPlanListGet200Response {
            plan_value_in_usd,
            plan_value_in_btc,
            pnl_in_usd,
            roi,
            plan,
        }
    }
}

