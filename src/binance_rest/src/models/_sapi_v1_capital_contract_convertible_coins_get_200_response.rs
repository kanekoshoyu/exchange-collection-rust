/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1CapitalContractConvertibleCoinsGet200Response {
    #[serde(rename = "convertEnabled")]
    pub convert_enabled: bool,
    #[serde(rename = "coins")]
    pub coins: Vec<String>,
    #[serde(rename = "exchangeRates")]
    pub exchange_rates: Box<models::SapiV1CapitalContractConvertibleCoinsGet200ResponseExchangeRates>,
}

impl SapiV1CapitalContractConvertibleCoinsGet200Response {
    pub fn new(convert_enabled: bool, coins: Vec<String>, exchange_rates: models::SapiV1CapitalContractConvertibleCoinsGet200ResponseExchangeRates) -> SapiV1CapitalContractConvertibleCoinsGet200Response {
        SapiV1CapitalContractConvertibleCoinsGet200Response {
            convert_enabled,
            coins,
            exchange_rates: Box::new(exchange_rates),
        }
    }
}

