/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SapiV1SubAccountFuturesPositionRiskGet200ResponseInner {
    #[serde(rename = "entryPrice")]
    pub entry_price: String,
    /// current initial leverage
    #[serde(rename = "leverage")]
    pub leverage: String,
    /// notional value limit of current initial leverage
    #[serde(rename = "maxNotional")]
    pub max_notional: String,
    #[serde(rename = "liquidationPrice")]
    pub liquidation_price: String,
    #[serde(rename = "markPrice")]
    pub mark_price: String,
    #[serde(rename = "positionAmount")]
    pub position_amount: String,
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "unrealizedProfit")]
    pub unrealized_profit: String,
}

impl SapiV1SubAccountFuturesPositionRiskGet200ResponseInner {
    pub fn new(entry_price: String, leverage: String, max_notional: String, liquidation_price: String, mark_price: String, position_amount: String, symbol: String, unrealized_profit: String) -> SapiV1SubAccountFuturesPositionRiskGet200ResponseInner {
        SapiV1SubAccountFuturesPositionRiskGet200ResponseInner {
            entry_price,
            leverage,
            max_notional,
            liquidation_price,
            mark_price,
            position_amount,
            symbol,
            unrealized_profit,
        }
    }
}

