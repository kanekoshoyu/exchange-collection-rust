/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiV3AccountCommissionGet200Response {
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "standardCommission")]
    pub standard_commission: Box<models::ApiV3AccountCommissionGet200ResponseStandardCommission>,
    #[serde(rename = "taxCommission")]
    pub tax_commission: Box<models::ApiV3AccountCommissionGet200ResponseTaxCommission>,
    #[serde(rename = "discount")]
    pub discount: Box<models::ApiV3AccountCommissionGet200ResponseDiscount>,
}

impl ApiV3AccountCommissionGet200Response {
    pub fn new(symbol: String, standard_commission: models::ApiV3AccountCommissionGet200ResponseStandardCommission, tax_commission: models::ApiV3AccountCommissionGet200ResponseTaxCommission, discount: models::ApiV3AccountCommissionGet200ResponseDiscount) -> ApiV3AccountCommissionGet200Response {
        ApiV3AccountCommissionGet200Response {
            symbol,
            standard_commission: Box::new(standard_commission),
            tax_commission: Box::new(tax_commission),
            discount: Box::new(discount),
        }
    }
}

