/*
 * MEXC Crypto Exchange
 *
 * Welcome to mexc API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReferralDataResultListInner {
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
    #[serde(rename = "nickName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub nick_name: Option<Option<String>>,
    #[serde(rename = "email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub email: Option<Option<String>>,
    #[serde(rename = "registerTime", skip_serializing_if = "Option::is_none")]
    pub register_time: Option<i64>,
    #[serde(rename = "inviteCode", skip_serializing_if = "Option::is_none")]
    pub invite_code: Option<String>,
    #[serde(rename = "depositAmount", skip_serializing_if = "Option::is_none")]
    pub deposit_amount: Option<String>,
    #[serde(rename = "tradingAmount", skip_serializing_if = "Option::is_none")]
    pub trading_amount: Option<String>,
    #[serde(rename = "commission", skip_serializing_if = "Option::is_none")]
    pub commission: Option<String>,
    #[serde(rename = "firstDepositTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub first_deposit_time: Option<Option<i64>>,
    #[serde(rename = "firstTradeTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub first_trade_time: Option<Option<i64>>,
    #[serde(rename = "lastDepositTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_deposit_time: Option<Option<i64>>,
    #[serde(rename = "lastTradeTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_trade_time: Option<Option<i64>>,
    #[serde(rename = "withdrawAmount", skip_serializing_if = "Option::is_none")]
    pub withdraw_amount: Option<String>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "identification", skip_serializing_if = "Option::is_none")]
    pub identification: Option<i32>,
}

impl ReferralDataResultListInner {
    pub fn new() -> ReferralDataResultListInner {
        ReferralDataResultListInner {
            uid: None,
            nick_name: None,
            email: None,
            register_time: None,
            invite_code: None,
            deposit_amount: None,
            trading_amount: None,
            commission: None,
            first_deposit_time: None,
            first_trade_time: None,
            last_deposit_time: None,
            last_trade_time: None,
            withdraw_amount: None,
            asset: None,
            identification: None,
        }
    }
}

