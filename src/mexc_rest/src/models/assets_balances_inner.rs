/*
 * MEXC Crypto Exchange
 *
 * Welcome to mexc API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetsBalancesInner {
    /// The asset symbol (e.g., \"MX\", \"BTC\").
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    /// The amount of the asset that is free to trade or withdraw.
    #[serde(rename = "free", skip_serializing_if = "Option::is_none")]
    pub free: Option<String>,
    /// The amount of the asset that is locked and cannot be used.
    #[serde(rename = "locked", skip_serializing_if = "Option::is_none")]
    pub locked: Option<String>,
}

impl AssetsBalancesInner {
    pub fn new() -> AssetsBalancesInner {
        AssetsBalancesInner {
            asset: None,
            free: None,
            locked: None,
        }
    }
}

