/*
 * MEXC Crypto Exchange
 *
 * Welcome to mexc API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CancelOrder {
    /// The trading pair symbol.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// The original client order ID.
    #[serde(rename = "origClientOrderId", skip_serializing_if = "Option::is_none")]
    pub orig_client_order_id: Option<String>,
    /// The unique identifier of the canceled order.
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<String>,
    /// The client order ID.
    #[serde(rename = "clientOrderId", skip_serializing_if = "Option::is_none")]
    pub client_order_id: Option<String>,
    /// The price of the order.
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    /// The original quantity of the order.
    #[serde(rename = "origQty", skip_serializing_if = "Option::is_none")]
    pub orig_qty: Option<String>,
    /// The executed quantity of the order.
    #[serde(rename = "executedQty", skip_serializing_if = "Option::is_none")]
    pub executed_qty: Option<String>,
    /// The cumulative quote quantity of the order.
    #[serde(rename = "cummulativeQuoteQty", skip_serializing_if = "Option::is_none")]
    pub cummulative_quote_qty: Option<String>,
    /// The status of the order (e.g., CANCELED).
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// The time in force of the order.
    #[serde(rename = "timeInForce", skip_serializing_if = "Option::is_none")]
    pub time_in_force: Option<String>,
    /// The type of the order (e.g., LIMIT).
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// The side of the order (BUY or SELL).
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
}

impl CancelOrder {
    pub fn new() -> CancelOrder {
        CancelOrder {
            symbol: None,
            orig_client_order_id: None,
            order_id: None,
            client_order_id: None,
            price: None,
            orig_qty: None,
            executed_qty: None,
            cummulative_quote_qty: None,
            status: None,
            time_in_force: None,
            r#type: None,
            side: None,
        }
    }
}

