/*
 * MEXC Crypto Exchange
 *
 * Welcome to mexc API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConversionsDataInner {
    /// The total amount converted during the transaction.
    #[serde(rename = "totalConvert", skip_serializing_if = "Option::is_none")]
    pub total_convert: Option<String>,
    /// The total fee for the conversion.
    #[serde(rename = "totalFee", skip_serializing_if = "Option::is_none")]
    pub total_fee: Option<String>,
    /// The timestamp of the conversion.
    #[serde(rename = "convertTime", skip_serializing_if = "Option::is_none")]
    pub convert_time: Option<i32>,
    #[serde(rename = "convertDetails", skip_serializing_if = "Option::is_none")]
    pub convert_details: Option<Vec<models::ConversionsDataInnerConvertDetailsInner>>,
}

impl ConversionsDataInner {
    pub fn new() -> ConversionsDataInner {
        ConversionsDataInner {
            total_convert: None,
            total_fee: None,
            convert_time: None,
            convert_details: None,
        }
    }
}

