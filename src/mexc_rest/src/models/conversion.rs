/*
 * MEXC Crypto Exchange
 *
 * Welcome to mexc API document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Conversion {
    /// List of assets that were successfully converted into MX.
    #[serde(rename = "successList", skip_serializing_if = "Option::is_none")]
    pub success_list: Option<Vec<String>>,
    /// List of assets that failed conversion.
    #[serde(rename = "failedList", skip_serializing_if = "Option::is_none")]
    pub failed_list: Option<Vec<String>>,
    /// The total amount converted into MX.
    #[serde(rename = "totalConvert", skip_serializing_if = "Option::is_none")]
    pub total_convert: Option<String>,
    /// The fee deducted for the conversion.
    #[serde(rename = "convertFee", skip_serializing_if = "Option::is_none")]
    pub convert_fee: Option<String>,
}

impl Conversion {
    pub fn new() -> Conversion {
        Conversion {
            success_list: None,
            failed_list: None,
            total_convert: None,
            convert_fee: None,
        }
    }
}

