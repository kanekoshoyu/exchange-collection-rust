/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Bill {
    /// The ID of the bill.
    #[serde(rename = "billId")]
    pub bill_id: String,
    /// The trading pair, e.g., \"BTCUSDT\".
    #[serde(rename = "symbol")]
    pub symbol: String,
    /// The amount of the bill, negative values represent a deduction.
    #[serde(rename = "amount")]
    pub amount: String,
    /// The fee associated with the bill.
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<String>,
    /// The fee paid using a coupon, if any.
    #[serde(rename = "feeByCoupon", skip_serializing_if = "Option::is_none")]
    pub fee_by_coupon: Option<String>,
    /// The type of business action related to the bill.
    #[serde(rename = "businessType")]
    pub business_type: String,
    /// The currency used in the transaction.
    #[serde(rename = "coin")]
    pub coin: String,
    /// The balance after the transaction.
    #[serde(rename = "balance")]
    pub balance: String,
    /// The time when the bill was created in Unix timestamp format (milliseconds).
    #[serde(rename = "cTime")]
    pub c_time: String,
}

impl Bill {
    pub fn new(bill_id: String, symbol: String, amount: String, business_type: String, coin: String, balance: String, c_time: String) -> Bill {
        Bill {
            bill_id,
            symbol,
            amount,
            fee: None,
            fee_by_coupon: None,
            business_type,
            coin,
            balance,
            c_time,
        }
    }
}

