/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BatchCancelRequest {
    /// Trading pair name, e.g. BTCUSDT
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// Batch order mode. Default is single.
    #[serde(rename = "batchMode", skip_serializing_if = "Option::is_none")]
    pub batch_mode: Option<BatchMode>,
    /// Collection of placing orders, maximum length: 50
    #[serde(rename = "orderList")]
    pub order_list: Vec<models::BatchCancelRequestOrderListInner>,
}

impl BatchCancelRequest {
    pub fn new(order_list: Vec<models::BatchCancelRequestOrderListInner>) -> BatchCancelRequest {
        BatchCancelRequest {
            symbol: None,
            batch_mode: None,
            order_list,
        }
    }
}
/// Batch order mode. Default is single.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BatchMode {
    #[serde(rename = "single")]
    Single,
    #[serde(rename = "multiple")]
    Multiple,
}

impl Default for BatchMode {
    fn default() -> BatchMode {
        Self::Single
    }
}

