/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VipFeeResponse {
    /// The level of the transaction (e.g., \"1\")
    #[serde(rename = "level")]
    pub level: String,
    /// The deal amount involved in the transaction
    #[serde(rename = "dealAmount")]
    pub deal_amount: String,
    /// The asset amount available for the transaction
    #[serde(rename = "assetAmount")]
    pub asset_amount: String,
    /// The taker fee rate applied to the transaction
    #[serde(rename = "takerFeeRate")]
    pub taker_fee_rate: String,
    /// The maker fee rate applied to the transaction
    #[serde(rename = "makerFeeRate")]
    pub maker_fee_rate: String,
    /// The amount of BTC withdrawn
    #[serde(rename = "btcWithdrawAmount")]
    pub btc_withdraw_amount: String,
    /// The amount of USDT withdrawn
    #[serde(rename = "usdtWithdrawAmount")]
    pub usdt_withdraw_amount: String,
}

impl VipFeeResponse {
    pub fn new(level: String, deal_amount: String, asset_amount: String, taker_fee_rate: String, maker_fee_rate: String, btc_withdraw_amount: String, usdt_withdraw_amount: String) -> VipFeeResponse {
        VipFeeResponse {
            level,
            deal_amount,
            asset_amount,
            taker_fee_rate,
            maker_fee_rate,
            btc_withdraw_amount,
            usdt_withdraw_amount,
        }
    }
}

