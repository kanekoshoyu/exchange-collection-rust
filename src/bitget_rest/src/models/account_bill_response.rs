/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountBillResponse {
    /// Creation time of the billing entry, Unix millisecond timestamp.
    #[serde(rename = "cTime", skip_serializing_if = "Option::is_none")]
    pub c_time: Option<String>,
    /// Token name, e.g., USDT.
    #[serde(rename = "coin", skip_serializing_if = "Option::is_none")]
    pub coin: Option<String>,
    /// Billing type.
    #[serde(rename = "groupType", skip_serializing_if = "Option::is_none")]
    pub group_type: Option<GroupType>,
    /// Type of business related to the billing entry.
    #[serde(rename = "businessType", skip_serializing_if = "Option::is_none")]
    pub business_type: Option<BusinessType>,
    /// The quantity involved in this transaction.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<String>,
    /// Remaining balance after the transaction.
    #[serde(rename = "balance", skip_serializing_if = "Option::is_none")]
    pub balance: Option<String>,
    /// Fees associated with the transaction.
    #[serde(rename = "fees", skip_serializing_if = "Option::is_none")]
    pub fees: Option<String>,
    /// Unique identifier for the billing entry.
    #[serde(rename = "billId", skip_serializing_if = "Option::is_none")]
    pub bill_id: Option<String>,
}

impl AccountBillResponse {
    pub fn new() -> AccountBillResponse {
        AccountBillResponse {
            c_time: None,
            coin: None,
            group_type: None,
            business_type: None,
            size: None,
            balance: None,
            fees: None,
            bill_id: None,
        }
    }
}
/// Billing type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GroupType {
    #[serde(rename = "deposit")]
    Deposit,
    #[serde(rename = "withdraw")]
    Withdraw,
    #[serde(rename = "transaction")]
    Transaction,
    #[serde(rename = "transfer")]
    Transfer,
    #[serde(rename = "other")]
    Other,
}

impl Default for GroupType {
    fn default() -> GroupType {
        Self::Deposit
    }
}
/// Type of business related to the billing entry.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BusinessType {
    #[serde(rename = "deposit")]
    Deposit,
    #[serde(rename = "withdraw")]
    Withdraw,
    #[serde(rename = "buy")]
    Buy,
    #[serde(rename = "sell")]
    Sell,
    #[serde(rename = "deduction of handling fee")]
    DeductionOfHandlingFee,
    #[serde(rename = "transfer-in")]
    TransferIn,
    #[serde(rename = "transfer-out")]
    TransferOut,
    #[serde(rename = "rebate rewards")]
    RebateRewards,
    #[serde(rename = "airdrop rewards")]
    AirdropRewards,
    #[serde(rename = "USDT contract rewards")]
    UsdtContractRewards,
    #[serde(rename = "mix contract rewards")]
    MixContractRewards,
    #[serde(rename = "system lock")]
    SystemLock,
    #[serde(rename = "user lock")]
    UserLock,
}

impl Default for BusinessType {
    fn default() -> BusinessType {
        Self::Deposit
    }
}

