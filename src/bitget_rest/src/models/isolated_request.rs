/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IsolatedRequest {
    /// Trading pair
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// Auto margin flag
    #[serde(rename = "autoMargin", skip_serializing_if = "Option::is_none")]
    pub auto_margin: Option<AutoMargin>,
    /// Margin coin (must be capitalized)
    #[serde(rename = "marginCoin", skip_serializing_if = "Option::is_none")]
    pub margin_coin: Option<String>,
    /// Position direction (no need in cross margin mode)
    #[serde(rename = "holdSide", skip_serializing_if = "Option::is_none")]
    pub hold_side: Option<HoldSide>,
    /// Margin amount; positive means increase, and negative means decrease
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
}

impl IsolatedRequest {
    pub fn new() -> IsolatedRequest {
        IsolatedRequest {
            symbol: None,
            auto_margin: None,
            margin_coin: None,
            hold_side: None,
            amount: None,
        }
    }
}
/// Auto margin flag
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AutoMargin {
    #[serde(rename = "on")]
    On,
    #[serde(rename = "off")]
    Off,
}

impl Default for AutoMargin {
    fn default() -> AutoMargin {
        Self::On
    }
}
/// Position direction (no need in cross margin mode)
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum HoldSide {
    #[serde(rename = "long")]
    Long,
    #[serde(rename = "short")]
    Short,
}

impl Default for HoldSide {
    fn default() -> HoldSide {
        Self::Long
    }
}

