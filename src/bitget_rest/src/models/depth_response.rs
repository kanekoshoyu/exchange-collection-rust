/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DepthResponse {
    /// Timestamp of the data
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
    /// Price accuracy scale
    #[serde(rename = "scale", skip_serializing_if = "Option::is_none")]
    pub scale: Option<String>,
    /// Quotation precision
    #[serde(rename = "precision", skip_serializing_if = "Option::is_none")]
    pub precision: Option<String>,
    /// Whether the precision is at its maximum value
    #[serde(rename = "isMaxPrecision", skip_serializing_if = "Option::is_none")]
    pub is_max_precision: Option<String>,
    #[serde(rename = "asks", skip_serializing_if = "Option::is_none")]
    pub asks: Option<Vec<models::Asks>>,
    #[serde(rename = "bids", skip_serializing_if = "Option::is_none")]
    pub bids: Option<Vec<models::Bids>>,
}

impl DepthResponse {
    pub fn new() -> DepthResponse {
        DepthResponse {
            ts: None,
            scale: None,
            precision: None,
            is_max_precision: None,
            asks: None,
            bids: None,
        }
    }
}

