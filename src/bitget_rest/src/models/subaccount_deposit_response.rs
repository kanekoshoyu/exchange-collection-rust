/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountDepositResponse {
    /// Unique order ID
    #[serde(rename = "orderId")]
    pub order_id: String,
    /// Unique trade ID
    #[serde(rename = "tradeId")]
    pub trade_id: String,
    /// Coin name, e.g., USDT
    #[serde(rename = "coin")]
    pub coin: String,
    /// Amount of the transfer
    #[serde(rename = "size")]
    pub size: String,
    /// Status of the transfer, e.g., success
    #[serde(rename = "status")]
    pub status: String,
    /// Destination address
    #[serde(rename = "toAddress")]
    pub to_address: String,
    /// Transfer destination type
    #[serde(rename = "dest")]
    pub dest: Dest,
    /// Blockchain network, e.g., erc20
    #[serde(rename = "chain")]
    pub chain: String,
    /// Source address
    #[serde(rename = "fromAddress")]
    pub from_address: String,
    /// Creation time in Unix millisecond timestamp
    #[serde(rename = "cTime")]
    pub c_time: String,
    /// Update time in Unix millisecond timestamp
    #[serde(rename = "uTime")]
    pub u_time: String,
}

impl SubaccountDepositResponse {
    pub fn new(order_id: String, trade_id: String, coin: String, size: String, status: String, to_address: String, dest: Dest, chain: String, from_address: String, c_time: String, u_time: String) -> SubaccountDepositResponse {
        SubaccountDepositResponse {
            order_id,
            trade_id,
            coin,
            size,
            status,
            to_address,
            dest,
            chain,
            from_address,
            c_time,
            u_time,
        }
    }
}
/// Transfer destination type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Dest {
    #[serde(rename = "on_chain")]
    OnChain,
    #[serde(rename = "internal_transfer")]
    InternalTransfer,
}

impl Default for Dest {
    fn default() -> Dest {
        Self::OnChain
    }
}

