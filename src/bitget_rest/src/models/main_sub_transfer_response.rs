/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MainSubTransferResponse {
    /// The token name (e.g., USDT)
    #[serde(rename = "coin", skip_serializing_if = "Option::is_none")]
    pub coin: Option<String>,
    /// The transfer status (e.g., Successful)
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// The account type to which the transfer is made (e.g., usdt_futures)
    #[serde(rename = "toType", skip_serializing_if = "Option::is_none")]
    pub to_type: Option<String>,
    /// The account type from which the transfer is made (e.g., spot)
    #[serde(rename = "fromType", skip_serializing_if = "Option::is_none")]
    pub from_type: Option<String>,
    /// The amount transferred (e.g., 1020.00000000)
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<String>,
    /// Timestamp of the transfer in Unix milliseconds (e.g., 1691476360467)
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
    /// Client's unique custom order ID for the transfer
    #[serde(rename = "clientOid", skip_serializing_if = "Option::is_none")]
    pub client_oid: Option<String>,
    /// Unique ID for the transfer
    #[serde(rename = "transferId", skip_serializing_if = "Option::is_none")]
    pub transfer_id: Option<String>,
    /// ID of the user initiating the transfer
    #[serde(rename = "fromUserId", skip_serializing_if = "Option::is_none")]
    pub from_user_id: Option<String>,
    /// ID of the user receiving the transfer
    #[serde(rename = "toUserId", skip_serializing_if = "Option::is_none")]
    pub to_user_id: Option<String>,
}

impl MainSubTransferResponse {
    pub fn new() -> MainSubTransferResponse {
        MainSubTransferResponse {
            coin: None,
            status: None,
            to_type: None,
            from_type: None,
            size: None,
            ts: None,
            client_oid: None,
            transfer_id: None,
            from_user_id: None,
            to_user_id: None,
        }
    }
}

