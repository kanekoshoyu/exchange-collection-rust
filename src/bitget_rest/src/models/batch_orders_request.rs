/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BatchOrdersRequest {
    /// The trading pair symbol, e.g., \"BTCUSDT\".
    #[serde(rename = "symbol")]
    pub symbol: String,
    /// The product type.
    #[serde(rename = "productType")]
    pub product_type: ProductType,
    /// The margin mode for the order.
    #[serde(rename = "marginMode")]
    pub margin_mode: MarginMode,
    /// The margin coin used, e.g., \"USDT\".
    #[serde(rename = "marginCoin")]
    pub margin_coin: String,
    /// List of orders with details.
    #[serde(rename = "orderList")]
    pub order_list: Vec<models::BatchOrdersRequestOrderListInner>,
}

impl BatchOrdersRequest {
    pub fn new(symbol: String, product_type: ProductType, margin_mode: MarginMode, margin_coin: String, order_list: Vec<models::BatchOrdersRequestOrderListInner>) -> BatchOrdersRequest {
        BatchOrdersRequest {
            symbol,
            product_type,
            margin_mode,
            margin_coin,
            order_list,
        }
    }
}
/// The product type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProductType {
    #[serde(rename = "USDT-FUTURES")]
    UsdtFutures,
    #[serde(rename = "COIN-FUTURES")]
    CoinFutures,
    #[serde(rename = "USDC-FUTURES")]
    UsdcFutures,
    #[serde(rename = "SUSDT-FUTURES")]
    SusdtFutures,
    #[serde(rename = "SCOIN-FUTURES")]
    ScoinFutures,
    #[serde(rename = "SUSDC-FUTURES")]
    SusdcFutures,
}

impl Default for ProductType {
    fn default() -> ProductType {
        Self::UsdtFutures
    }
}
/// The margin mode for the order.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MarginMode {
    #[serde(rename = "isolated")]
    Isolated,
    #[serde(rename = "crossed")]
    Crossed,
}

impl Default for MarginMode {
    fn default() -> MarginMode {
        Self::Isolated
    }
}

