/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TriggerOrderRequest {
    /// List of order IDs and client OIDs.
    #[serde(rename = "orderIdList")]
    pub order_id_list: Vec<models::OrderIdItem>,
    /// Trading pair, e.g., ETHUSDT.
    #[serde(rename = "symbol")]
    pub symbol: String,
    /// Product type options: - USDT-FUTURES: USDT professional futures - COIN-FUTURES: Mixed futures - USDC-FUTURES: USDC professional futures - SUSDT-FUTURES: USDT professional futures demo - SCOIN-FUTURES: Mixed futures demo - SUSDC-FUTURES: USDC professional futures demo 
    #[serde(rename = "productType")]
    pub product_type: String,
    /// Margin currency.
    #[serde(rename = "marginCoin")]
    pub margin_coin: String,
}

impl TriggerOrderRequest {
    pub fn new(order_id_list: Vec<models::OrderIdItem>, symbol: String, product_type: String, margin_coin: String) -> TriggerOrderRequest {
        TriggerOrderRequest {
            order_id_list,
            symbol,
            product_type,
            margin_coin,
        }
    }
}

