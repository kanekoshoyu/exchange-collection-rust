/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SymbolInfo {
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "baseCoin", skip_serializing_if = "Option::is_none")]
    pub base_coin: Option<String>,
    #[serde(rename = "quoteCoin", skip_serializing_if = "Option::is_none")]
    pub quote_coin: Option<String>,
    #[serde(rename = "minTradeAmount", skip_serializing_if = "Option::is_none")]
    pub min_trade_amount: Option<f64>,
    #[serde(rename = "maxTradeAmount", skip_serializing_if = "Option::is_none")]
    pub max_trade_amount: Option<f64>,
    #[serde(rename = "takerFeeRate", skip_serializing_if = "Option::is_none")]
    pub taker_fee_rate: Option<f64>,
    #[serde(rename = "makerFeeRate", skip_serializing_if = "Option::is_none")]
    pub maker_fee_rate: Option<f64>,
    #[serde(rename = "pricePrecision", skip_serializing_if = "Option::is_none")]
    pub price_precision: Option<i32>,
    #[serde(rename = "quantityPrecision", skip_serializing_if = "Option::is_none")]
    pub quantity_precision: Option<i32>,
    #[serde(rename = "quotePrecision", skip_serializing_if = "Option::is_none")]
    pub quote_precision: Option<i32>,
    #[serde(rename = "minTradeUSDT", skip_serializing_if = "Option::is_none")]
    pub min_trade_usdt: Option<f64>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "buyLimitPriceRatio", skip_serializing_if = "Option::is_none")]
    pub buy_limit_price_ratio: Option<f64>,
    #[serde(rename = "sellLimitPriceRatio", skip_serializing_if = "Option::is_none")]
    pub sell_limit_price_ratio: Option<f64>,
    #[serde(rename = "orderQuantity", skip_serializing_if = "Option::is_none")]
    pub order_quantity: Option<f64>,
    #[serde(rename = "areaSymbol", skip_serializing_if = "Option::is_none")]
    pub area_symbol: Option<String>,
}

impl SymbolInfo {
    pub fn new() -> SymbolInfo {
        SymbolInfo {
            symbol: None,
            base_coin: None,
            quote_coin: None,
            min_trade_amount: None,
            max_trade_amount: None,
            taker_fee_rate: None,
            maker_fee_rate: None,
            price_precision: None,
            quantity_precision: None,
            quote_precision: None,
            min_trade_usdt: None,
            status: None,
            buy_limit_price_ratio: None,
            sell_limit_price_ratio: None,
            order_quantity: None,
            area_symbol: None,
        }
    }
}

