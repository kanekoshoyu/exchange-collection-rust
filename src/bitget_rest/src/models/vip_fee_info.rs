/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VipFeeInfo {
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<i32>,
    #[serde(rename = "dealAmount", skip_serializing_if = "Option::is_none")]
    pub deal_amount: Option<f64>,
    #[serde(rename = "assetAmount", skip_serializing_if = "Option::is_none")]
    pub asset_amount: Option<f64>,
    #[serde(rename = "takerFeeRate", skip_serializing_if = "Option::is_none")]
    pub taker_fee_rate: Option<f64>,
    #[serde(rename = "makerFeeRate", skip_serializing_if = "Option::is_none")]
    pub maker_fee_rate: Option<f64>,
    #[serde(rename = "btcWithdrawAmount", skip_serializing_if = "Option::is_none")]
    pub btc_withdraw_amount: Option<f64>,
    #[serde(rename = "usdtWithdrawAmount", skip_serializing_if = "Option::is_none")]
    pub usdt_withdraw_amount: Option<f64>,
}

impl VipFeeInfo {
    pub fn new() -> VipFeeInfo {
        VipFeeInfo {
            level: None,
            deal_amount: None,
            asset_amount: None,
            taker_fee_rate: None,
            maker_fee_rate: None,
            btc_withdraw_amount: None,
            usdt_withdraw_amount: None,
        }
    }
}

