/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FutureAccountResponse {
    #[serde(rename = "marginCoin", skip_serializing_if = "Option::is_none")]
    pub margin_coin: Option<String>,
    #[serde(rename = "locked", skip_serializing_if = "Option::is_none")]
    pub locked: Option<String>,
    #[serde(rename = "available", skip_serializing_if = "Option::is_none")]
    pub available: Option<String>,
    #[serde(rename = "crossedMaxAvailable", skip_serializing_if = "Option::is_none")]
    pub crossed_max_available: Option<String>,
    #[serde(rename = "isolatedMaxAvailable", skip_serializing_if = "Option::is_none")]
    pub isolated_max_available: Option<String>,
    #[serde(rename = "maxTransferOut", skip_serializing_if = "Option::is_none")]
    pub max_transfer_out: Option<String>,
    #[serde(rename = "accountEquity", skip_serializing_if = "Option::is_none")]
    pub account_equity: Option<String>,
    #[serde(rename = "usdtEquity", skip_serializing_if = "Option::is_none")]
    pub usdt_equity: Option<String>,
    #[serde(rename = "btcEquity", skip_serializing_if = "Option::is_none")]
    pub btc_equity: Option<String>,
    #[serde(rename = "crossedRiskRate", skip_serializing_if = "Option::is_none")]
    pub crossed_risk_rate: Option<String>,
    #[serde(rename = "crossedMarginLeverage", skip_serializing_if = "Option::is_none")]
    pub crossed_margin_leverage: Option<String>,
    #[serde(rename = "isolatedLongLever", skip_serializing_if = "Option::is_none")]
    pub isolated_long_lever: Option<String>,
    #[serde(rename = "isolatedShortLever", skip_serializing_if = "Option::is_none")]
    pub isolated_short_lever: Option<String>,
    #[serde(rename = "marginMode", skip_serializing_if = "Option::is_none")]
    pub margin_mode: Option<String>,
    #[serde(rename = "posMode", skip_serializing_if = "Option::is_none")]
    pub pos_mode: Option<String>,
    #[serde(rename = "unrealizedPL", skip_serializing_if = "Option::is_none")]
    pub unrealized_pl: Option<String>,
    #[serde(rename = "coupon", skip_serializing_if = "Option::is_none")]
    pub coupon: Option<String>,
}

impl FutureAccountResponse {
    pub fn new() -> FutureAccountResponse {
        FutureAccountResponse {
            margin_coin: None,
            locked: None,
            available: None,
            crossed_max_available: None,
            isolated_max_available: None,
            max_transfer_out: None,
            account_equity: None,
            usdt_equity: None,
            btc_equity: None,
            crossed_risk_rate: None,
            crossed_margin_leverage: None,
            isolated_long_lever: None,
            isolated_short_lever: None,
            margin_mode: None,
            pos_mode: None,
            unrealized_pl: None,
            coupon: None,
        }
    }
}

