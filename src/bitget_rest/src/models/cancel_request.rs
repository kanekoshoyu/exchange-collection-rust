/*
 * Bitget API
 *
 * Welcome to Bitget Developer document! 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CancelRequest {
    /// Trading pair name, e.g. BTCUSDT. Not required when tpslType is 'tpsl'.
    #[serde(rename = "symbol")]
    pub symbol: String,
    /// Order type, default: 'normal'. 'normal' for spot orders, 'tpsl' for spot TP/SL orders. 
    #[serde(rename = "tpslType", skip_serializing_if = "Option::is_none")]
    pub tpsl_type: Option<String>,
    /// Order ID. Required when tpslType is 'tpsl'. Either orderId or clientOid is required.
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<String>,
    /// Client Order ID. Either orderId or clientOid is required.
    #[serde(rename = "clientOid", skip_serializing_if = "Option::is_none")]
    pub client_oid: Option<String>,
}

impl CancelRequest {
    pub fn new(symbol: String) -> CancelRequest {
        CancelRequest {
            symbol,
            tpsl_type: None,
            order_id: None,
            client_oid: None,
        }
    }
}

